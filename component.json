{
    "title": "Stripe",
    "description": "The Stripe REST API. Please see https://stripe.com/docs/api for more details.",
    "docsUrl": "",
    "url": "https://api.apis.guru/v2/specs/stripe.com/2019-02-19/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://api.stripe.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "Post3dSecure": {
            "main": "./lib/actions/Post3dSecure.js",
            "title": "<p>Initiate 3D Secure authentication.</p>",
            "description": "<p>Initiate 3D Secure authentication.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Post3dSecure.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Get3dSecureThreeDSecure": {
            "main": "./lib/actions/Get3dSecureThreeDSecure.js",
            "title": "<p>Retrieves a 3D Secure object.</p>",
            "description": "<p>Retrieves a 3D Secure object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Get3dSecureThreeDSecure.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteAccount": {
            "main": "./lib/actions/DeleteAccount.js",
            "title": "<p>With <a href=\"/docs/connect\">Connect</a>, you may delete Custom accounts you manage.</p>\n\n<p>Custom accounts created using test-mode keys can be deleted at any time. Custom accounts created using live-mode keys may only be deleted once all balances are zero.</p>\n\n<p>If you are looking to close your own account, use the <a href=\"https://dashboard.stripe.com/account/data\">data tab in your account settings</a> instead.</p>",
            "description": "<p>With <a href=\"/docs/connect\">Connect</a>, you may delete Custom accounts you manage.</p>\n\n<p>Custom accounts created using test-mode keys can be deleted at any time. Custom accounts created using live-mode keys may only be deleted once all balances are zero.</p>\n\n<p>If you are looking to close your own account, use the <a href=\"https://dashboard.stripe.com/account/data\">data tab in your account settings</a> instead.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccount.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccount": {
            "main": "./lib/actions/GetAccount.js",
            "title": "<p>Retrieves the details of an account.</p>",
            "description": "<p>Retrieves the details of an account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccount.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccount": {
            "main": "./lib/actions/PostAccount.js",
            "title": "<p>Updates a connected <a href=\"/docs/connect/accounts\">Express or Custom account</a> by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked <strong>Custom Only</strong> below.) Parameters marked <strong>Custom and Express</strong> are supported by both account types.</p>\n\n<p>To update your own account, use the <a href=\"https://dashboard.stripe.com/account\">Dashboard</a>. Refer to our <a href=\"/docs/connect/updating-accounts\">Connect</a> documentation to learn more about updating accounts.</p>",
            "description": "<p>Updates a connected <a href=\"/docs/connect/accounts\">Express or Custom account</a> by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked <strong>Custom Only</strong> below.) Parameters marked <strong>Custom and Express</strong> are supported by both account types.</p>\n\n<p>To update your own account, use the <a href=\"https://dashboard.stripe.com/account\">Dashboard</a>. Refer to our <a href=\"/docs/connect/updating-accounts\">Connect</a> documentation to learn more about updating accounts.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccount.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountBankAccounts": {
            "main": "./lib/actions/PostAccountBankAccounts.js",
            "title": "<p>Create an external account for a given account.</p>",
            "description": "<p>Create an external account for a given account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountBankAccounts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteAccountBankAccountsId": {
            "main": "./lib/actions/DeleteAccountBankAccountsId.js",
            "title": "<p>Delete a specified external account for a given account.</p>",
            "description": "<p>Delete a specified external account for a given account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountBankAccountsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccountBankAccountsId": {
            "main": "./lib/actions/GetAccountBankAccountsId.js",
            "title": "<p>Retrieve a specified external account for a given account.</p>",
            "description": "<p>Retrieve a specified external account for a given account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountBankAccountsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountBankAccountsId": {
            "main": "./lib/actions/PostAccountBankAccountsId.js",
            "title": "<p>Updates the metadata, account holder name, and account holder type of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>\n<p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>",
            "description": "<p>Updates the metadata, account holder name, and account holder type of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>\n<p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountBankAccountsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccountExternalAccounts": {
            "main": "./lib/actions/GetAccountExternalAccounts.js",
            "title": "<p>List external accounts for an account.</p>",
            "description": "<p>List external accounts for an account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountExternalAccounts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountExternalAccounts": {
            "main": "./lib/actions/PostAccountExternalAccounts.js",
            "title": "<p>Create an external account for a given account.</p>",
            "description": "<p>Create an external account for a given account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountExternalAccounts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteAccountExternalAccountsId": {
            "main": "./lib/actions/DeleteAccountExternalAccountsId.js",
            "title": "<p>Delete a specified external account for a given account.</p>",
            "description": "<p>Delete a specified external account for a given account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountExternalAccountsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccountExternalAccountsId": {
            "main": "./lib/actions/GetAccountExternalAccountsId.js",
            "title": "<p>Retrieve a specified external account for a given account.</p>",
            "description": "<p>Retrieve a specified external account for a given account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountExternalAccountsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountExternalAccountsId": {
            "main": "./lib/actions/PostAccountExternalAccountsId.js",
            "title": "<p>Updates the metadata, account holder name, and account holder type of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>\n<p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>",
            "description": "<p>Updates the metadata, account holder name, and account holder type of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>\n<p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountExternalAccountsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountLoginLinks": {
            "main": "./lib/actions/PostAccountLoginLinks.js",
            "title": "<p>Creates a single-use login link for an Express account to access their Stripe dashboard.</p>\n\n<p><strong>You may only create login links for <a href=\"/docs/connect/express-accounts\">Express accounts</a> connected to your platform</strong>.</p>",
            "description": "<p>Creates a single-use login link for an Express account to access their Stripe dashboard.</p>\n\n<p><strong>You may only create login links for <a href=\"/docs/connect/express-accounts\">Express accounts</a> connected to your platform</strong>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountLoginLinks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutAccountLogout": {
            "main": "./lib/actions/PutAccountLogout.js",
            "title": "<p>Invalidates all sessions for a light account, for a platform to use during platform logout.</p>\n\n<p><strong>You may only log out <a href=\"/docs/connect/express-accounts\">Express accounts</a> connected to your platform</strong>.</p>",
            "description": "<p>Invalidates all sessions for a light account, for a platform to use during platform logout.</p>\n\n<p><strong>You may only log out <a href=\"/docs/connect/express-accounts\">Express accounts</a> connected to your platform</strong>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutAccountLogout.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccountPeople": {
            "main": "./lib/actions/GetAccountPeople.js",
            "title": "<p>Returns a list of people associated with the account's legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
            "description": "<p>Returns a list of people associated with the account's legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountPeople.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountPeople": {
            "main": "./lib/actions/PostAccountPeople.js",
            "title": "<p>Creates a new person.</p>",
            "description": "<p>Creates a new person.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountPeople.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteAccountPeoplePerson": {
            "main": "./lib/actions/DeleteAccountPeoplePerson.js",
            "title": "<p>Deletes an existing person's relationship to the account's legal entity.</p>",
            "description": "<p>Deletes an existing person's relationship to the account's legal entity.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountPeoplePerson.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccountPeoplePerson": {
            "main": "./lib/actions/GetAccountPeoplePerson.js",
            "title": "<p>Retrieves an existing person.</p>",
            "description": "<p>Retrieves an existing person.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountPeoplePerson.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountPeoplePerson": {
            "main": "./lib/actions/PostAccountPeoplePerson.js",
            "title": "<p>Updates an existing person.</p>",
            "description": "<p>Updates an existing person.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountPeoplePerson.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccountPersons": {
            "main": "./lib/actions/GetAccountPersons.js",
            "title": "<p>Returns a list of people associated with the account's legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
            "description": "<p>Returns a list of people associated with the account's legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountPersons.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountPersons": {
            "main": "./lib/actions/PostAccountPersons.js",
            "title": "<p>Creates a new person.</p>",
            "description": "<p>Creates a new person.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountPersons.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteAccountPersonsPerson": {
            "main": "./lib/actions/DeleteAccountPersonsPerson.js",
            "title": "<p>Deletes an existing person's relationship to the account's legal entity.</p>",
            "description": "<p>Deletes an existing person's relationship to the account's legal entity.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountPersonsPerson.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccountPersonsPerson": {
            "main": "./lib/actions/GetAccountPersonsPerson.js",
            "title": "<p>Retrieves an existing person.</p>",
            "description": "<p>Retrieves an existing person.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountPersonsPerson.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountPersonsPerson": {
            "main": "./lib/actions/PostAccountPersonsPerson.js",
            "title": "<p>Updates an existing person.</p>",
            "description": "<p>Updates an existing person.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountPersonsPerson.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountLinks": {
            "main": "./lib/actions/PostAccountLinks.js",
            "title": "<p>Creates an AccountLink object that returns a Stripe URL that the user can redirect their user to in order to take them through the Hosted Verification flow.</p>",
            "description": "<p>Creates an AccountLink object that returns a Stripe URL that the user can redirect their user to in order to take them through the Hosted Verification flow.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountLinks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccounts": {
            "main": "./lib/actions/GetAccounts.js",
            "title": "<p>Returns a list of accounts connected to your platform via <a href=\"/docs/connect\">Connect</a>. If you're not a platform, the list is empty.</p>",
            "description": "<p>Returns a list of accounts connected to your platform via <a href=\"/docs/connect\">Connect</a>. If you're not a platform, the list is empty.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccounts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccounts": {
            "main": "./lib/actions/PostAccounts.js",
            "title": "<p>With <a href=\"/docs/connect\">Connect</a>, you can create Stripe accounts for your users.\nTo do this, you'll first need to <a href=\"https://dashboard.stripe.com/account/applications/settings\">register your platform</a>.</p>\n\n<p>For Standard accounts, parameters other than <code>country</code>, <code>email</code>, and <code>type</code>\nare used to prefill the account application that we ask the account holder to complete.</p>",
            "description": "<p>With <a href=\"/docs/connect\">Connect</a>, you can create Stripe accounts for your users.\nTo do this, you'll first need to <a href=\"https://dashboard.stripe.com/account/applications/settings\">register your platform</a>.</p>\n\n<p>For Standard accounts, parameters other than <code>country</code>, <code>email</code>, and <code>type</code>\nare used to prefill the account application that we ask the account holder to complete.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccounts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteAccountsAccount": {
            "main": "./lib/actions/DeleteAccountsAccount.js",
            "title": "<p>With <a href=\"/docs/connect\">Connect</a>, you may delete Custom accounts you manage.</p>\n\n<p>Custom accounts created using test-mode keys can be deleted at any time. Custom accounts created using live-mode keys may only be deleted once all balances are zero.</p>\n\n<p>If you are looking to close your own account, use the <a href=\"https://dashboard.stripe.com/account/data\">data tab in your account settings</a> instead.</p>",
            "description": "<p>With <a href=\"/docs/connect\">Connect</a>, you may delete Custom accounts you manage.</p>\n\n<p>Custom accounts created using test-mode keys can be deleted at any time. Custom accounts created using live-mode keys may only be deleted once all balances are zero.</p>\n\n<p>If you are looking to close your own account, use the <a href=\"https://dashboard.stripe.com/account/data\">data tab in your account settings</a> instead.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountsAccount.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccountsAccount": {
            "main": "./lib/actions/GetAccountsAccount.js",
            "title": "<p>Retrieves the details of an account.</p>",
            "description": "<p>Retrieves the details of an account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccount.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountsAccount": {
            "main": "./lib/actions/PostAccountsAccount.js",
            "title": "<p>Updates a connected <a href=\"/docs/connect/accounts\">Express or Custom account</a> by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked <strong>Custom Only</strong> below.) Parameters marked <strong>Custom and Express</strong> are supported by both account types.</p>\n\n<p>To update your own account, use the <a href=\"https://dashboard.stripe.com/account\">Dashboard</a>. Refer to our <a href=\"/docs/connect/updating-accounts\">Connect</a> documentation to learn more about updating accounts.</p>",
            "description": "<p>Updates a connected <a href=\"/docs/connect/accounts\">Express or Custom account</a> by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked <strong>Custom Only</strong> below.) Parameters marked <strong>Custom and Express</strong> are supported by both account types.</p>\n\n<p>To update your own account, use the <a href=\"https://dashboard.stripe.com/account\">Dashboard</a>. Refer to our <a href=\"/docs/connect/updating-accounts\">Connect</a> documentation to learn more about updating accounts.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccount.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountsAccountBankAccounts": {
            "main": "./lib/actions/PostAccountsAccountBankAccounts.js",
            "title": "<p>Create an external account for a given account.</p>",
            "description": "<p>Create an external account for a given account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountBankAccounts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteAccountsAccountBankAccountsId": {
            "main": "./lib/actions/DeleteAccountsAccountBankAccountsId.js",
            "title": "<p>Delete a specified external account for a given account.</p>",
            "description": "<p>Delete a specified external account for a given account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountsAccountBankAccountsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccountsAccountBankAccountsId": {
            "main": "./lib/actions/GetAccountsAccountBankAccountsId.js",
            "title": "<p>Retrieve a specified external account for a given account.</p>",
            "description": "<p>Retrieve a specified external account for a given account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountBankAccountsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountsAccountBankAccountsId": {
            "main": "./lib/actions/PostAccountsAccountBankAccountsId.js",
            "title": "<p>Updates the metadata, account holder name, and account holder type of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>\n<p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>",
            "description": "<p>Updates the metadata, account holder name, and account holder type of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>\n<p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountBankAccountsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccountsAccountExternalAccounts": {
            "main": "./lib/actions/GetAccountsAccountExternalAccounts.js",
            "title": "<p>List external accounts for an account.</p>",
            "description": "<p>List external accounts for an account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountExternalAccounts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountsAccountExternalAccounts": {
            "main": "./lib/actions/PostAccountsAccountExternalAccounts.js",
            "title": "<p>Create an external account for a given account.</p>",
            "description": "<p>Create an external account for a given account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountExternalAccounts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteAccountsAccountExternalAccountsId": {
            "main": "./lib/actions/DeleteAccountsAccountExternalAccountsId.js",
            "title": "<p>Delete a specified external account for a given account.</p>",
            "description": "<p>Delete a specified external account for a given account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountsAccountExternalAccountsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccountsAccountExternalAccountsId": {
            "main": "./lib/actions/GetAccountsAccountExternalAccountsId.js",
            "title": "<p>Retrieve a specified external account for a given account.</p>",
            "description": "<p>Retrieve a specified external account for a given account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountExternalAccountsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountsAccountExternalAccountsId": {
            "main": "./lib/actions/PostAccountsAccountExternalAccountsId.js",
            "title": "<p>Updates the metadata, account holder name, and account holder type of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>\n<p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>",
            "description": "<p>Updates the metadata, account holder name, and account holder type of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>\n<p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountExternalAccountsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountsAccountLoginLinks": {
            "main": "./lib/actions/PostAccountsAccountLoginLinks.js",
            "title": "<p>Creates a single-use login link for an Express account to access their Stripe dashboard.</p>\n\n<p><strong>You may only create login links for <a href=\"/docs/connect/express-accounts\">Express accounts</a> connected to your platform</strong>.</p>",
            "description": "<p>Creates a single-use login link for an Express account to access their Stripe dashboard.</p>\n\n<p><strong>You may only create login links for <a href=\"/docs/connect/express-accounts\">Express accounts</a> connected to your platform</strong>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountLoginLinks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutAccountsAccountLogout": {
            "main": "./lib/actions/PutAccountsAccountLogout.js",
            "title": "<p>Invalidates all sessions for a light account, for a platform to use during platform logout.</p>\n\n<p><strong>You may only log out <a href=\"/docs/connect/express-accounts\">Express accounts</a> connected to your platform</strong>.</p>",
            "description": "<p>Invalidates all sessions for a light account, for a platform to use during platform logout.</p>\n\n<p><strong>You may only log out <a href=\"/docs/connect/express-accounts\">Express accounts</a> connected to your platform</strong>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutAccountsAccountLogout.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccountsAccountPeople": {
            "main": "./lib/actions/GetAccountsAccountPeople.js",
            "title": "<p>Returns a list of people associated with the account's legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
            "description": "<p>Returns a list of people associated with the account's legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountPeople.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountsAccountPeople": {
            "main": "./lib/actions/PostAccountsAccountPeople.js",
            "title": "<p>Creates a new person.</p>",
            "description": "<p>Creates a new person.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountPeople.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteAccountsAccountPeoplePerson": {
            "main": "./lib/actions/DeleteAccountsAccountPeoplePerson.js",
            "title": "<p>Deletes an existing person's relationship to the account's legal entity.</p>",
            "description": "<p>Deletes an existing person's relationship to the account's legal entity.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountsAccountPeoplePerson.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccountsAccountPeoplePerson": {
            "main": "./lib/actions/GetAccountsAccountPeoplePerson.js",
            "title": "<p>Retrieves an existing person.</p>",
            "description": "<p>Retrieves an existing person.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountPeoplePerson.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountsAccountPeoplePerson": {
            "main": "./lib/actions/PostAccountsAccountPeoplePerson.js",
            "title": "<p>Updates an existing person.</p>",
            "description": "<p>Updates an existing person.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountPeoplePerson.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccountsAccountPersons": {
            "main": "./lib/actions/GetAccountsAccountPersons.js",
            "title": "<p>Returns a list of people associated with the account's legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
            "description": "<p>Returns a list of people associated with the account's legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountPersons.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountsAccountPersons": {
            "main": "./lib/actions/PostAccountsAccountPersons.js",
            "title": "<p>Creates a new person.</p>",
            "description": "<p>Creates a new person.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountPersons.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteAccountsAccountPersonsPerson": {
            "main": "./lib/actions/DeleteAccountsAccountPersonsPerson.js",
            "title": "<p>Deletes an existing person's relationship to the account's legal entity.</p>",
            "description": "<p>Deletes an existing person's relationship to the account's legal entity.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountsAccountPersonsPerson.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetAccountsAccountPersonsPerson": {
            "main": "./lib/actions/GetAccountsAccountPersonsPerson.js",
            "title": "<p>Retrieves an existing person.</p>",
            "description": "<p>Retrieves an existing person.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountPersonsPerson.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountsAccountPersonsPerson": {
            "main": "./lib/actions/PostAccountsAccountPersonsPerson.js",
            "title": "<p>Updates an existing person.</p>",
            "description": "<p>Updates an existing person.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountPersonsPerson.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostAccountsAccountReject": {
            "main": "./lib/actions/PostAccountsAccountReject.js",
            "title": "<p>With <a href=\"/docs/connect\">Connect</a>, you may flag accounts as suspicious.</p>\n\n<p>Test-mode Custom and Express accounts can be rejected at any time. Accounts created using live-mode keys may only be rejected once all balances are zero.</p>",
            "description": "<p>With <a href=\"/docs/connect\">Connect</a>, you may flag accounts as suspicious.</p>\n\n<p>Test-mode Custom and Express accounts can be rejected at any time. Accounts created using live-mode keys may only be rejected once all balances are zero.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountReject.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetApplePayDomains": {
            "main": "./lib/actions/GetApplePayDomains.js",
            "title": "<p>List apple pay domains.</p>",
            "description": "<p>List apple pay domains.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetApplePayDomains.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostApplePayDomains": {
            "main": "./lib/actions/PostApplePayDomains.js",
            "title": "<p>Create an apple pay domain.</p>",
            "description": "<p>Create an apple pay domain.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostApplePayDomains.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteApplePayDomainsDomain": {
            "main": "./lib/actions/DeleteApplePayDomainsDomain.js",
            "title": "<p>Delete an apple pay domain.</p>",
            "description": "<p>Delete an apple pay domain.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteApplePayDomainsDomain.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetApplePayDomainsDomain": {
            "main": "./lib/actions/GetApplePayDomainsDomain.js",
            "title": "<p>Retrieve an apple pay domain.</p>",
            "description": "<p>Retrieve an apple pay domain.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetApplePayDomainsDomain.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetApplicationFees": {
            "main": "./lib/actions/GetApplicationFees.js",
            "title": "<p>Returns a list of application fees you've previously collected. The application fees are returned in sorted order, with the most recent fees appearing first.</p>",
            "description": "<p>Returns a list of application fees you've previously collected. The application fees are returned in sorted order, with the most recent fees appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetApplicationFees.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetApplicationFeesFeeRefundsId": {
            "main": "./lib/actions/GetApplicationFeesFeeRefundsId.js",
            "title": "<p>By default, you can see the 10 most recent refunds stored directly on the application fee object, but you can also retrieve details about a specific refund stored on the application fee.</p>",
            "description": "<p>By default, you can see the 10 most recent refunds stored directly on the application fee object, but you can also retrieve details about a specific refund stored on the application fee.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetApplicationFeesFeeRefundsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostApplicationFeesFeeRefundsId": {
            "main": "./lib/actions/PostApplicationFeesFeeRefundsId.js",
            "title": "<p>Updates the specified application fee refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request only accepts metadata as an argument.</p>",
            "description": "<p>Updates the specified application fee refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request only accepts metadata as an argument.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostApplicationFeesFeeRefundsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetApplicationFeesId": {
            "main": "./lib/actions/GetApplicationFeesId.js",
            "title": "<p>Retrieves the details of an application fee that your account has collected. The same information is returned when refunding the application fee.</p>",
            "description": "<p>Retrieves the details of an application fee that your account has collected. The same information is returned when refunding the application fee.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetApplicationFeesId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostApplicationFeesIdRefund": {
            "main": "./lib/actions/PostApplicationFeesIdRefund.js",
            "title": "PostApplicationFeesIdRefund",
            "description": "",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostApplicationFeesIdRefund.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetApplicationFeesIdRefunds": {
            "main": "./lib/actions/GetApplicationFeesIdRefunds.js",
            "title": "<p>You can see a list of the refunds belonging to a specific application fee. Note that the 10 most recent refunds are always available by default on the application fee object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.</p>",
            "description": "<p>You can see a list of the refunds belonging to a specific application fee. Note that the 10 most recent refunds are always available by default on the application fee object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetApplicationFeesIdRefunds.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostApplicationFeesIdRefunds": {
            "main": "./lib/actions/PostApplicationFeesIdRefunds.js",
            "title": "<p>Refunds an application fee that has previously been collected but not yet refunded.\nFunds will be refunded to the Stripe account from which the fee was originally collected.</p>\n\n<p>You can optionally refund only part of an application fee.\nYou can do so multiple times, until the entire fee has been refunded.</p>\n\n<p>Once entirely refunded, an application fee can't be refunded again.\nThis method will raise an error when called on an already-refunded application fee,\nor when trying to refund more money than is left on an application fee.</p>",
            "description": "<p>Refunds an application fee that has previously been collected but not yet refunded.\nFunds will be refunded to the Stripe account from which the fee was originally collected.</p>\n\n<p>You can optionally refund only part of an application fee.\nYou can do so multiple times, until the entire fee has been refunded.</p>\n\n<p>Once entirely refunded, an application fee can't be refunded again.\nThis method will raise an error when called on an already-refunded application fee,\nor when trying to refund more money than is left on an application fee.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostApplicationFeesIdRefunds.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetBalance": {
            "main": "./lib/actions/GetBalance.js",
            "title": "<p>Retrieves the current account balance, based on the authentication that was used to make the request.\n For a sample request, see <a href=\"/docs/connect/account-balances#accounting-for-negative-balances\">Accounting for negative balances</a>.</p>",
            "description": "<p>Retrieves the current account balance, based on the authentication that was used to make the request.\n For a sample request, see <a href=\"/docs/connect/account-balances#accounting-for-negative-balances\">Accounting for negative balances</a>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBalance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetBalanceHistory": {
            "main": "./lib/actions/GetBalanceHistory.js",
            "title": "<p>Returns a list of transactions that have contributed to the Stripe account balance (e.g., charges, transfers, and so forth). The transactions are returned in sorted order, with the most recent transactions appearing first.</p>",
            "description": "<p>Returns a list of transactions that have contributed to the Stripe account balance (e.g., charges, transfers, and so forth). The transactions are returned in sorted order, with the most recent transactions appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBalanceHistory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetBalanceHistoryId": {
            "main": "./lib/actions/GetBalanceHistoryId.js",
            "title": "<p>Retrieves the balance transaction with the given ID.</p>",
            "description": "<p>Retrieves the balance transaction with the given ID.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBalanceHistoryId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetBitcoinReceivers": {
            "main": "./lib/actions/GetBitcoinReceivers.js",
            "title": "<p>Returns a list of your receivers. Receivers are returned sorted by creation date, with the most recently created receivers appearing first.</p>",
            "description": "<p>Returns a list of your receivers. Receivers are returned sorted by creation date, with the most recently created receivers appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBitcoinReceivers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetBitcoinReceiversId": {
            "main": "./lib/actions/GetBitcoinReceiversId.js",
            "title": "<p>Retrieves the Bitcoin receiver with the given ID.</p>",
            "description": "<p>Retrieves the Bitcoin receiver with the given ID.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBitcoinReceiversId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetBitcoinReceiversReceiverTransactions": {
            "main": "./lib/actions/GetBitcoinReceiversReceiverTransactions.js",
            "title": "<p>List bitcoin transacitons for a given receiver.</p>",
            "description": "<p>List bitcoin transacitons for a given receiver.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBitcoinReceiversReceiverTransactions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetBitcoinTransactions": {
            "main": "./lib/actions/GetBitcoinTransactions.js",
            "title": "<p>List bitcoin transacitons for a given receiver.</p>",
            "description": "<p>List bitcoin transacitons for a given receiver.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBitcoinTransactions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCharges": {
            "main": "./lib/actions/GetCharges.js",
            "title": "<p>Returns a list of charges you've previously created. The charges are returned in sorted order, with the most recent charges appearing first.</p>",
            "description": "<p>Returns a list of charges you've previously created. The charges are returned in sorted order, with the most recent charges appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCharges.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCharges": {
            "main": "./lib/actions/PostCharges.js",
            "title": "<p>To charge a credit card or other payment source, you create a <code>Charge</code> object. If your API key is in test mode, the supplied payment source (e.g., card) won't actually be charged, although everything else will occur as if in live mode. (Stripe assumes that the charge would have completed successfully).</p>",
            "description": "<p>To charge a credit card or other payment source, you create a <code>Charge</code> object. If your API key is in test mode, the supplied payment source (e.g., card) won't actually be charged, although everything else will occur as if in live mode. (Stripe assumes that the charge would have completed successfully).</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCharges.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetChargesCharge": {
            "main": "./lib/actions/GetChargesCharge.js",
            "title": "<p>Retrieves the details of a charge that has previously been created. Supply the unique charge ID that was returned from your previous request, and Stripe will return the corresponding charge information. The same information is returned when creating or refunding the charge.</p>",
            "description": "<p>Retrieves the details of a charge that has previously been created. Supply the unique charge ID that was returned from your previous request, and Stripe will return the corresponding charge information. The same information is returned when creating or refunding the charge.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetChargesCharge.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostChargesCharge": {
            "main": "./lib/actions/PostChargesCharge.js",
            "title": "<p>Updates the specified charge by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "description": "<p>Updates the specified charge by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostChargesCharge.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostChargesChargeCapture": {
            "main": "./lib/actions/PostChargesChargeCapture.js",
            "title": "<p>Capture the payment of an existing, uncaptured, charge. This is the second half of the two-step payment flow, where first you <a href=\"#create_charge\">created a charge</a> with the capture option set to false.</p>\n\n<p>Uncaptured payments expire exactly seven days after they are created. If they are not captured by that point in time, they will be marked as refunded and will no longer be capturable.</p>",
            "description": "<p>Capture the payment of an existing, uncaptured, charge. This is the second half of the two-step payment flow, where first you <a href=\"#create_charge\">created a charge</a> with the capture option set to false.</p>\n\n<p>Uncaptured payments expire exactly seven days after they are created. If they are not captured by that point in time, they will be marked as refunded and will no longer be capturable.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostChargesChargeCapture.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetChargesChargeDispute": {
            "main": "./lib/actions/GetChargesChargeDispute.js",
            "title": "<p>Retrieve a dispute for a specified charge.</p>",
            "description": "<p>Retrieve a dispute for a specified charge.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetChargesChargeDispute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostChargesChargeDispute": {
            "main": "./lib/actions/PostChargesChargeDispute.js",
            "title": "PostChargesChargeDispute",
            "description": "",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostChargesChargeDispute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostChargesChargeDisputeClose": {
            "main": "./lib/actions/PostChargesChargeDisputeClose.js",
            "title": "PostChargesChargeDisputeClose",
            "description": "",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostChargesChargeDisputeClose.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostChargesChargeRefund": {
            "main": "./lib/actions/PostChargesChargeRefund.js",
            "title": "<p>When you create a new refund, you must specify a charge on which to create it.</p>\n\n<p>Creating a new refund will refund a charge that has previously been created but not yet refunded.\nFunds will be refunded to the credit or debit card that was originally charged.</p>\n\n<p>You can optionally refund only part of a charge.\nYou can do so multiple times, until the entire charge has been refunded.</p>\n\n<p>Once entirely refunded, a charge can't be refunded again.\nThis method will raise an error when called on an already-refunded charge,\nor when trying to refund more money than is left on a charge.</p>",
            "description": "<p>When you create a new refund, you must specify a charge on which to create it.</p>\n\n<p>Creating a new refund will refund a charge that has previously been created but not yet refunded.\nFunds will be refunded to the credit or debit card that was originally charged.</p>\n\n<p>You can optionally refund only part of a charge.\nYou can do so multiple times, until the entire charge has been refunded.</p>\n\n<p>Once entirely refunded, a charge can't be refunded again.\nThis method will raise an error when called on an already-refunded charge,\nor when trying to refund more money than is left on a charge.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostChargesChargeRefund.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetChargesChargeRefunds": {
            "main": "./lib/actions/GetChargesChargeRefunds.js",
            "title": "<p>You can see a list of the refunds belonging to a specific charge. Note that the 10 most recent refunds are always available by default on the charge object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.</p>",
            "description": "<p>You can see a list of the refunds belonging to a specific charge. Note that the 10 most recent refunds are always available by default on the charge object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetChargesChargeRefunds.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostChargesChargeRefunds": {
            "main": "./lib/actions/PostChargesChargeRefunds.js",
            "title": "<p>Create a refund.</p>",
            "description": "<p>Create a refund.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostChargesChargeRefunds.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetChargesChargeRefundsRefund": {
            "main": "./lib/actions/GetChargesChargeRefundsRefund.js",
            "title": "<p>Retrieves the details of an existing refund.</p>",
            "description": "<p>Retrieves the details of an existing refund.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetChargesChargeRefundsRefund.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostChargesChargeRefundsRefund": {
            "main": "./lib/actions/PostChargesChargeRefundsRefund.js",
            "title": "<p>Update a specified refund.</p>",
            "description": "<p>Update a specified refund.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostChargesChargeRefundsRefund.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCheckoutSessions": {
            "main": "./lib/actions/PostCheckoutSessions.js",
            "title": "<p>Creates a Session object.</p>",
            "description": "<p>Creates a Session object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCheckoutSessions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCountrySpecs": {
            "main": "./lib/actions/GetCountrySpecs.js",
            "title": "<p>Lists all Country Spec objects available in the API.</p>",
            "description": "<p>Lists all Country Spec objects available in the API.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCountrySpecs.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCountrySpecsCountry": {
            "main": "./lib/actions/GetCountrySpecsCountry.js",
            "title": "<p>Returns a Country Spec for a given Country code.</p>",
            "description": "<p>Returns a Country Spec for a given Country code.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCountrySpecsCountry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCoupons": {
            "main": "./lib/actions/GetCoupons.js",
            "title": "<p>Returns a list of your coupons.</p>",
            "description": "<p>Returns a list of your coupons.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCoupons.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCoupons": {
            "main": "./lib/actions/PostCoupons.js",
            "title": "<p>You can create coupons easily via the <a href=\"https://dashboard.stripe.com/coupons\">coupon management</a> page of the Stripe dashboard. Coupon creation is also accessible via the API if you need to create coupons on the fly.</p>\n\n<p>A coupon has either a <code>percent_off</code> or an <code>amount_off</code> and <code>currency</code>. If you set an <code>amount_off</code>, that amount will be subtracted from any invoice's subtotal. For example, an invoice with a subtotal of <currency>100</currency> will have a final total of <currency>0</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it and an invoice with a subtotal of <currency>300</currency> will have a final total of <currency>100</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it.</p>",
            "description": "<p>You can create coupons easily via the <a href=\"https://dashboard.stripe.com/coupons\">coupon management</a> page of the Stripe dashboard. Coupon creation is also accessible via the API if you need to create coupons on the fly.</p>\n\n<p>A coupon has either a <code>percent_off</code> or an <code>amount_off</code> and <code>currency</code>. If you set an <code>amount_off</code>, that amount will be subtracted from any invoice's subtotal. For example, an invoice with a subtotal of <currency>100</currency> will have a final total of <currency>0</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it and an invoice with a subtotal of <currency>300</currency> will have a final total of <currency>100</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCoupons.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteCouponsCoupon": {
            "main": "./lib/actions/DeleteCouponsCoupon.js",
            "title": "<p>You can delete coupons via the <a href=\"https://dashboard.stripe.com/coupons\">coupon management</a> page of the Stripe dashboard. However, deleting a coupon does not affect any customers who have already applied the coupon; it means that new customers can't redeem the coupon. You can also delete coupons via the API.</p>",
            "description": "<p>You can delete coupons via the <a href=\"https://dashboard.stripe.com/coupons\">coupon management</a> page of the Stripe dashboard. However, deleting a coupon does not affect any customers who have already applied the coupon; it means that new customers can't redeem the coupon. You can also delete coupons via the API.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCouponsCoupon.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCouponsCoupon": {
            "main": "./lib/actions/GetCouponsCoupon.js",
            "title": "<p>Retrieves the coupon with the given ID.</p>",
            "description": "<p>Retrieves the coupon with the given ID.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCouponsCoupon.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCouponsCoupon": {
            "main": "./lib/actions/PostCouponsCoupon.js",
            "title": "<p>Updates the metadata of a coupon. Other coupon details (currency, duration, amount_off) are, by design, not editable.</p>",
            "description": "<p>Updates the metadata of a coupon. Other coupon details (currency, duration, amount_off) are, by design, not editable.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCouponsCoupon.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCustomers": {
            "main": "./lib/actions/GetCustomers.js",
            "title": "<p>Returns a list of your customers. The customers are returned sorted by creation date, with the most recent customers appearing first.</p>",
            "description": "<p>Returns a list of your customers. The customers are returned sorted by creation date, with the most recent customers appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCustomers": {
            "main": "./lib/actions/PostCustomers.js",
            "title": "<p>Creates a new customer object.</p>",
            "description": "<p>Creates a new customer object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteCustomersCustomer": {
            "main": "./lib/actions/DeleteCustomersCustomer.js",
            "title": "<p>Permanently deletes a customer. It cannot be undone. Also immediately cancels any active subscriptions on the customer.</p>",
            "description": "<p>Permanently deletes a customer. It cannot be undone. Also immediately cancels any active subscriptions on the customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCustomersCustomer.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCustomersCustomer": {
            "main": "./lib/actions/GetCustomersCustomer.js",
            "title": "<p>Retrieves the details of an existing customer. You need only supply the unique customer identifier that was returned upon customer creation.</p>",
            "description": "<p>Retrieves the details of an existing customer. You need only supply the unique customer identifier that was returned upon customer creation.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomer.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCustomersCustomer": {
            "main": "./lib/actions/PostCustomersCustomer.js",
            "title": "<p>Updates the specified customer by setting the values of the parameters passed. Any parameters not provided will be left unchanged. For example, if you pass the <strong>source</strong> parameter, that becomes the customer's active source (e.g., a card) to be used for all charges in the future. When you update a customer to a new valid card source by passing the <strong>source</strong> parameter: for each of the customer's current subscriptions, if the subscription bills automatically and is in the <code>past_due</code> state, then the latest open invoice for the subscription with automatic collection enabled will be retried. This retry will not count as an automatic retry, and will not affect the next regularly scheduled payment for the invoice. Changing the <strong>default_source</strong> for a customer will not trigger this behavior.</p>\n\n<p>This request accepts mostly the same arguments as the customer creation call.</p>",
            "description": "<p>Updates the specified customer by setting the values of the parameters passed. Any parameters not provided will be left unchanged. For example, if you pass the <strong>source</strong> parameter, that becomes the customer's active source (e.g., a card) to be used for all charges in the future. When you update a customer to a new valid card source by passing the <strong>source</strong> parameter: for each of the customer's current subscriptions, if the subscription bills automatically and is in the <code>past_due</code> state, then the latest open invoice for the subscription with automatic collection enabled will be retried. This retry will not count as an automatic retry, and will not affect the next regularly scheduled payment for the invoice. Changing the <strong>default_source</strong> for a customer will not trigger this behavior.</p>\n\n<p>This request accepts mostly the same arguments as the customer creation call.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomer.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCustomersCustomerBankAccounts": {
            "main": "./lib/actions/GetCustomersCustomerBankAccounts.js",
            "title": "<p>You can see a list of the bank accounts belonging to a Customer. Note that the 10 most recent sources are always available by default on the Customer. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional bank accounts.</p>",
            "description": "<p>You can see a list of the bank accounts belonging to a Customer. Note that the 10 most recent sources are always available by default on the Customer. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional bank accounts.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerBankAccounts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCustomersCustomerBankAccounts": {
            "main": "./lib/actions/PostCustomersCustomerBankAccounts.js",
            "title": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>\n\n<p>If the card's owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should either <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>,\nor <a href=\"/docs/api#update_recipient\">update the recipient</a> to have a new <code>default_card</code>.</p>",
            "description": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>\n\n<p>If the card's owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should either <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>,\nor <a href=\"/docs/api#update_recipient\">update the recipient</a> to have a new <code>default_card</code>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerBankAccounts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteCustomersCustomerBankAccountsId": {
            "main": "./lib/actions/DeleteCustomersCustomerBankAccountsId.js",
            "title": "<p>Delete a specified source for a given customer.</p>",
            "description": "<p>Delete a specified source for a given customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCustomersCustomerBankAccountsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCustomersCustomerBankAccountsId": {
            "main": "./lib/actions/GetCustomersCustomerBankAccountsId.js",
            "title": "<p>By default, you can see the 10 most recent sources stored on a Customer directly on the object, but you can also retrieve details about a specific bank account stored on the Stripe account.</p>",
            "description": "<p>By default, you can see the 10 most recent sources stored on a Customer directly on the object, but you can also retrieve details about a specific bank account stored on the Stripe account.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerBankAccountsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCustomersCustomerBankAccountsId": {
            "main": "./lib/actions/PostCustomersCustomerBankAccountsId.js",
            "title": "<p>Update a specified source for a given customer.</p>",
            "description": "<p>Update a specified source for a given customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerBankAccountsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCustomersCustomerBankAccountsIdVerify": {
            "main": "./lib/actions/PostCustomersCustomerBankAccountsIdVerify.js",
            "title": "<p>Verify a specified bank account for a given customer.</p>",
            "description": "<p>Verify a specified bank account for a given customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerBankAccountsIdVerify.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCustomersCustomerCards": {
            "main": "./lib/actions/GetCustomersCustomerCards.js",
            "title": "<p>You can see a list of the cards belonging to a customer.\nNote that the 10 most recent sources are always available on the <code>Customer</code> object.\nIf you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional cards.</p>",
            "description": "<p>You can see a list of the cards belonging to a customer.\nNote that the 10 most recent sources are always available on the <code>Customer</code> object.\nIf you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional cards.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerCards.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCustomersCustomerCards": {
            "main": "./lib/actions/PostCustomersCustomerCards.js",
            "title": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>\n\n<p>If the card's owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should either <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>,\nor <a href=\"/docs/api#update_recipient\">update the recipient</a> to have a new <code>default_card</code>.</p>",
            "description": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>\n\n<p>If the card's owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should either <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>,\nor <a href=\"/docs/api#update_recipient\">update the recipient</a> to have a new <code>default_card</code>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerCards.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteCustomersCustomerCardsId": {
            "main": "./lib/actions/DeleteCustomersCustomerCardsId.js",
            "title": "<p>Delete a specified source for a given customer.</p>",
            "description": "<p>Delete a specified source for a given customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCustomersCustomerCardsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCustomersCustomerCardsId": {
            "main": "./lib/actions/GetCustomersCustomerCardsId.js",
            "title": "<p>You can always see the 10 most recent cards directly on a customer; this method lets you retrieve details about a specific card stored on the customer.</p>",
            "description": "<p>You can always see the 10 most recent cards directly on a customer; this method lets you retrieve details about a specific card stored on the customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerCardsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCustomersCustomerCardsId": {
            "main": "./lib/actions/PostCustomersCustomerCardsId.js",
            "title": "<p>Update a specified source for a given customer.</p>",
            "description": "<p>Update a specified source for a given customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerCardsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteCustomersCustomerDiscount": {
            "main": "./lib/actions/DeleteCustomersCustomerDiscount.js",
            "title": "<p>Removes the currently applied discount on a customer.</p>",
            "description": "<p>Removes the currently applied discount on a customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCustomersCustomerDiscount.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCustomersCustomerDiscount": {
            "main": "./lib/actions/GetCustomersCustomerDiscount.js",
            "title": "GetCustomersCustomerDiscount",
            "description": "",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerDiscount.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCustomersCustomerSources": {
            "main": "./lib/actions/GetCustomersCustomerSources.js",
            "title": "<p>List sources for a specified customer.</p>",
            "description": "<p>List sources for a specified customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerSources.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCustomersCustomerSources": {
            "main": "./lib/actions/PostCustomersCustomerSources.js",
            "title": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>\n\n<p>If the card's owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should either <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>,\nor <a href=\"/docs/api#update_recipient\">update the recipient</a> to have a new <code>default_card</code>.</p>",
            "description": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>\n\n<p>If the card's owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should either <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>,\nor <a href=\"/docs/api#update_recipient\">update the recipient</a> to have a new <code>default_card</code>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerSources.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteCustomersCustomerSourcesId": {
            "main": "./lib/actions/DeleteCustomersCustomerSourcesId.js",
            "title": "<p>Delete a specified source for a given customer.</p>",
            "description": "<p>Delete a specified source for a given customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCustomersCustomerSourcesId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCustomersCustomerSourcesId": {
            "main": "./lib/actions/GetCustomersCustomerSourcesId.js",
            "title": "<p>Retrieve a specified source for a given customer.</p>",
            "description": "<p>Retrieve a specified source for a given customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerSourcesId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCustomersCustomerSourcesId": {
            "main": "./lib/actions/PostCustomersCustomerSourcesId.js",
            "title": "<p>Update a specified source for a given customer.</p>",
            "description": "<p>Update a specified source for a given customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerSourcesId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCustomersCustomerSourcesIdVerify": {
            "main": "./lib/actions/PostCustomersCustomerSourcesIdVerify.js",
            "title": "<p>Verify a specified bank account for a given customer.</p>",
            "description": "<p>Verify a specified bank account for a given customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerSourcesIdVerify.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCustomersCustomerSubscriptions": {
            "main": "./lib/actions/GetCustomersCustomerSubscriptions.js",
            "title": "<p>You can see a list of the customer's active subscriptions. Note that the 10 most recent active subscriptions are always available by default on the customer object. If you need more than those 10, you can use the limit and starting_after parameters to page through additional subscriptions.</p>",
            "description": "<p>You can see a list of the customer's active subscriptions. Note that the 10 most recent active subscriptions are always available by default on the customer object. If you need more than those 10, you can use the limit and starting_after parameters to page through additional subscriptions.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerSubscriptions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCustomersCustomerSubscriptions": {
            "main": "./lib/actions/PostCustomersCustomerSubscriptions.js",
            "title": "<p>Creates a new subscription on an existing customer.</p>",
            "description": "<p>Creates a new subscription on an existing customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerSubscriptions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteCustomersCustomerSubscriptionsSubscriptionExposedId": {
            "main": "./lib/actions/DeleteCustomersCustomerSubscriptionsSubscriptionExposedId.js",
            "title": "<p>Cancels a customer's subscription. If you set the <code>at_period_end</code> parameter to <code>true</code>, the subscription will remain active until the end of the period, at which point it will be canceled and not renewed. Otherwise, with the default <code>false</code> value, the subscription is terminated immediately. In either case, the customer will not be charged again for the subscription.</p>\n\n<p>Note, however, that any pending invoice items that you've created will still be charged for at the end of the period, unless manually <a href=\"#delete_invoiceitem\">deleted</a>. If you've set the subscription to cancel at the end of the period, any pending prorations will also be left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations will be removed.</p>\n\n<p>By default, upon subscription cancellation, Stripe will stop automatic collection of all finalized invoices for the customer. This is intended to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can resume automatic collection of the invoices manually after subscription cancellation to have us proceed. Or, you could check for unpaid invoices before allowing the customer to cancel the subscription at all.</p>",
            "description": "<p>Cancels a customer's subscription. If you set the <code>at_period_end</code> parameter to <code>true</code>, the subscription will remain active until the end of the period, at which point it will be canceled and not renewed. Otherwise, with the default <code>false</code> value, the subscription is terminated immediately. In either case, the customer will not be charged again for the subscription.</p>\n\n<p>Note, however, that any pending invoice items that you've created will still be charged for at the end of the period, unless manually <a href=\"#delete_invoiceitem\">deleted</a>. If you've set the subscription to cancel at the end of the period, any pending prorations will also be left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations will be removed.</p>\n\n<p>By default, upon subscription cancellation, Stripe will stop automatic collection of all finalized invoices for the customer. This is intended to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can resume automatic collection of the invoices manually after subscription cancellation to have us proceed. Or, you could check for unpaid invoices before allowing the customer to cancel the subscription at all.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCustomersCustomerSubscriptionsSubscriptionExposedId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCustomersCustomerSubscriptionsSubscriptionExposedId": {
            "main": "./lib/actions/GetCustomersCustomerSubscriptionsSubscriptionExposedId.js",
            "title": "<p>Retrieves the subscription with the given ID.</p>",
            "description": "<p>Retrieves the subscription with the given ID.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerSubscriptionsSubscriptionExposedId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostCustomersCustomerSubscriptionsSubscriptionExposedId": {
            "main": "./lib/actions/PostCustomersCustomerSubscriptionsSubscriptionExposedId.js",
            "title": "<p>Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes. To preview how the proration will be calculated, use the <a href=\"#upcoming_invoice\">upcoming invoice</a> endpoint.</p>",
            "description": "<p>Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes. To preview how the proration will be calculated, use the <a href=\"#upcoming_invoice\">upcoming invoice</a> endpoint.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerSubscriptionsSubscriptionExposedId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount": {
            "main": "./lib/actions/DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount.js",
            "title": "<p>Removes the currently applied discount on a customer.</p>",
            "description": "<p>Removes the currently applied discount on a customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount": {
            "main": "./lib/actions/GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount.js",
            "title": "GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount",
            "description": "",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetDisputes": {
            "main": "./lib/actions/GetDisputes.js",
            "title": "<p>Returns a list of your disputes.</p>",
            "description": "<p>Returns a list of your disputes.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDisputes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetDisputesDispute": {
            "main": "./lib/actions/GetDisputesDispute.js",
            "title": "<p>Retrieves the dispute with the given ID.</p>",
            "description": "<p>Retrieves the dispute with the given ID.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDisputesDispute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostDisputesDispute": {
            "main": "./lib/actions/PostDisputesDispute.js",
            "title": "<p>When you get a dispute, contacting your customer is always the best first step. If that doesn't work, you can submit evidence to help us resolve the dispute in your favor. You can do this in your <a href=\"https://dashboard.stripe.com/disputes\">dashboard</a>, but if you prefer, you can use the API to submit evidence programmatically.</p>\n\n<p>Depending on your dispute type, different evidence fields will give you a better chance of winning your dispute. To figure out which evidence fields to provide, see our <a href=\"/docs/disputes/categories\">guide to dispute types</a>.</p>",
            "description": "<p>When you get a dispute, contacting your customer is always the best first step. If that doesn't work, you can submit evidence to help us resolve the dispute in your favor. You can do this in your <a href=\"https://dashboard.stripe.com/disputes\">dashboard</a>, but if you prefer, you can use the API to submit evidence programmatically.</p>\n\n<p>Depending on your dispute type, different evidence fields will give you a better chance of winning your dispute. To figure out which evidence fields to provide, see our <a href=\"/docs/disputes/categories\">guide to dispute types</a>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostDisputesDispute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostDisputesDisputeClose": {
            "main": "./lib/actions/PostDisputesDisputeClose.js",
            "title": "<p>Closing the dispute for a charge indicates that you do not have any evidence to submit and are essentially dismissing the dispute, acknowledging it as lost.</p>\n\n<p>The status of the dispute will change from <code>needs_response</code> to <code>lost</code>. <em>Closing a dispute is irreversible</em>.</p>",
            "description": "<p>Closing the dispute for a charge indicates that you do not have any evidence to submit and are essentially dismissing the dispute, acknowledging it as lost.</p>\n\n<p>The status of the dispute will change from <code>needs_response</code> to <code>lost</code>. <em>Closing a dispute is irreversible</em>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostDisputesDisputeClose.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostEphemeralKeys": {
            "main": "./lib/actions/PostEphemeralKeys.js",
            "title": "<p>Creates a short-lived API key for a given resource.</p>",
            "description": "<p>Creates a short-lived API key for a given resource.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostEphemeralKeys.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteEphemeralKeysKey": {
            "main": "./lib/actions/DeleteEphemeralKeysKey.js",
            "title": "<p>Invalidates a short-lived API key for a given resource.</p>",
            "description": "<p>Invalidates a short-lived API key for a given resource.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteEphemeralKeysKey.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetEvents": {
            "main": "./lib/actions/GetEvents.js",
            "title": "<p>List events, going back up to 30 days. Each event data is rendered according to Stripe API version at its creation time, specified in <a href=\"/docs/api/events/object\">event object</a> <code>api_version</code> attribute (not according to your current Stripe API version or <code>Stripe-Version</code> header).</p>",
            "description": "<p>List events, going back up to 30 days. Each event data is rendered according to Stripe API version at its creation time, specified in <a href=\"/docs/api/events/object\">event object</a> <code>api_version</code> attribute (not according to your current Stripe API version or <code>Stripe-Version</code> header).</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetEvents.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetEventsId": {
            "main": "./lib/actions/GetEventsId.js",
            "title": "<p>Retrieves the details of an event. Supply the unique identifier of the event, which you might have received in a webhook.</p>",
            "description": "<p>Retrieves the details of an event. Supply the unique identifier of the event, which you might have received in a webhook.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetEventsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostEventsIdRetry": {
            "main": "./lib/actions/PostEventsIdRetry.js",
            "title": "<p>Resend an event. This only works in testmode</p>",
            "description": "<p>Resend an event. This only works in testmode</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostEventsIdRetry.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetExchangeRates": {
            "main": "./lib/actions/GetExchangeRates.js",
            "title": "<p>Returns a list of objects that contain the rates at which foreign currencies are converted to one another. Only shows the currencies for which Stripe supports.</p>",
            "description": "<p>Returns a list of objects that contain the rates at which foreign currencies are converted to one another. Only shows the currencies for which Stripe supports.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetExchangeRates.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetExchangeRatesCurrency": {
            "main": "./lib/actions/GetExchangeRatesCurrency.js",
            "title": "<p>Retrieves the exchange rates from the given currency to every supported currency.</p>",
            "description": "<p>Retrieves the exchange rates from the given currency to every supported currency.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetExchangeRatesCurrency.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetFileLinks": {
            "main": "./lib/actions/GetFileLinks.js",
            "title": "<p>Returns a list of file links.</p>",
            "description": "<p>Returns a list of file links.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetFileLinks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostFileLinks": {
            "main": "./lib/actions/PostFileLinks.js",
            "title": "<p>Creates a new file link object.</p>",
            "description": "<p>Creates a new file link object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostFileLinks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetFileLinksLink": {
            "main": "./lib/actions/GetFileLinksLink.js",
            "title": "<p>Retrieves the file link with the given ID.</p>",
            "description": "<p>Retrieves the file link with the given ID.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetFileLinksLink.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostFileLinksLink": {
            "main": "./lib/actions/PostFileLinksLink.js",
            "title": "<p>Updates an existing file link object. Expired links can no longer be updated.</p>",
            "description": "<p>Updates an existing file link object. Expired links can no longer be updated.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostFileLinksLink.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetFiles": {
            "main": "./lib/actions/GetFiles.js",
            "title": "<p>Returns a list of the files that your account has access to. The files are returned sorted by creation date, with the most recently created files appearing first.</p>",
            "description": "<p>Returns a list of the files that your account has access to. The files are returned sorted by creation date, with the most recently created files appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetFiles.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostFiles": {
            "main": "./lib/actions/PostFiles.js",
            "title": "<p>To upload a file to Stripe, you'll need to send a request of type <code>multipart/form-data</code>. The request should contain the file you would like to upload, as well as the parameters for creating a file.</p>\n\n<p>All of Stripe's officially supported API libraries should have support for sending <code>multipart/form-data</code>.</p>",
            "description": "<p>To upload a file to Stripe, you'll need to send a request of type <code>multipart/form-data</code>. The request should contain the file you would like to upload, as well as the parameters for creating a file.</p>\n\n<p>All of Stripe's officially supported API libraries should have support for sending <code>multipart/form-data</code>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostFiles.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetFilesFile": {
            "main": "./lib/actions/GetFilesFile.js",
            "title": "<p>Retrieves the details of an existing file object. Supply the unique file ID from a file, and Stripe will return the corresponding file object.</p>",
            "description": "<p>Retrieves the details of an existing file object. Supply the unique file ID from a file, and Stripe will return the corresponding file object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetFilesFile.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetInvoiceitems": {
            "main": "./lib/actions/GetInvoiceitems.js",
            "title": "<p>Returns a list of your invoice items. Invoice items are returned sorted by creation date, with the most recently created invoice items appearing first.</p>",
            "description": "<p>Returns a list of your invoice items. Invoice items are returned sorted by creation date, with the most recently created invoice items appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInvoiceitems.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostInvoiceitems": {
            "main": "./lib/actions/PostInvoiceitems.js",
            "title": "<p>Creates an item to be added to a draft invoice. If no invoice is specified, the item will be on the next invoice created for the customer specified.</p>",
            "description": "<p>Creates an item to be added to a draft invoice. If no invoice is specified, the item will be on the next invoice created for the customer specified.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoiceitems.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteInvoiceitemsInvoiceitem": {
            "main": "./lib/actions/DeleteInvoiceitemsInvoiceitem.js",
            "title": "<p>Deletes an invoice item, removing it from an invoice. Deleting invoice items is only possible when they're not attached to invoices, or if it's attached to a draft invoice.</p>",
            "description": "<p>Deletes an invoice item, removing it from an invoice. Deleting invoice items is only possible when they're not attached to invoices, or if it's attached to a draft invoice.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteInvoiceitemsInvoiceitem.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetInvoiceitemsInvoiceitem": {
            "main": "./lib/actions/GetInvoiceitemsInvoiceitem.js",
            "title": "<p>Retrieves the invoice item with the given ID.</p>",
            "description": "<p>Retrieves the invoice item with the given ID.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInvoiceitemsInvoiceitem.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostInvoiceitemsInvoiceitem": {
            "main": "./lib/actions/PostInvoiceitemsInvoiceitem.js",
            "title": "<p>Updates the amount or description of an invoice item on an upcoming invoice. Updating an invoice item is only possible before the invoice it's attached to is closed.</p>",
            "description": "<p>Updates the amount or description of an invoice item on an upcoming invoice. Updating an invoice item is only possible before the invoice it's attached to is closed.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoiceitemsInvoiceitem.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetInvoices": {
            "main": "./lib/actions/GetInvoices.js",
            "title": "<p>You can list all invoices, or list the invoices for a specific customer. The invoices are returned sorted by creation date, with the most recently created invoices appearing first.</p>",
            "description": "<p>You can list all invoices, or list the invoices for a specific customer. The invoices are returned sorted by creation date, with the most recently created invoices appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInvoices.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostInvoices": {
            "main": "./lib/actions/PostInvoices.js",
            "title": "<p>This endpoint creates a draft invoice for a given customer. The draft invoice created pulls in all pending invoice items on that customer, including prorations.</p>",
            "description": "<p>This endpoint creates a draft invoice for a given customer. The draft invoice created pulls in all pending invoice items on that customer, including prorations.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoices.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetInvoicesUpcoming": {
            "main": "./lib/actions/GetInvoicesUpcoming.js",
            "title": "<p>At any time, you can preview the upcoming invoice for a customer. This will show you all the charges that are pending, including subscription renewal charges, invoice item charges, etc. It will also show you any discount that is applicable to the customer.</p>\n\n<p>Note that when you are viewing an upcoming invoice, you are simply viewing a preview - the invoice has not yet been created. As such, the upcoming invoice will not show up in invoice listing calls, and you cannot use the API to pay or edit the invoice. If you want to change the amount that your customer will be billed, you can add, remove, or update pending invoice items, or update the customer's discount.</p>\n\n<p>You can preview the effects of updating a subscription, including a preview of what proration will take place. To ensure that the actual proration is calculated exactly the same as the previewed proration, you should pass a <code>proration_date</code> parameter when doing the actual subscription update. The value passed in should be the same as the <code>subscription_proration_date</code> returned on the upcoming invoice resource. The recommended way to get only the prorations being previewed is to consider only proration line items where <code>period[start]</code> is equal to the <code>subscription_proration_date</code> on the upcoming invoice resource.</p>",
            "description": "<p>At any time, you can preview the upcoming invoice for a customer. This will show you all the charges that are pending, including subscription renewal charges, invoice item charges, etc. It will also show you any discount that is applicable to the customer.</p>\n\n<p>Note that when you are viewing an upcoming invoice, you are simply viewing a preview - the invoice has not yet been created. As such, the upcoming invoice will not show up in invoice listing calls, and you cannot use the API to pay or edit the invoice. If you want to change the amount that your customer will be billed, you can add, remove, or update pending invoice items, or update the customer's discount.</p>\n\n<p>You can preview the effects of updating a subscription, including a preview of what proration will take place. To ensure that the actual proration is calculated exactly the same as the previewed proration, you should pass a <code>proration_date</code> parameter when doing the actual subscription update. The value passed in should be the same as the <code>subscription_proration_date</code> returned on the upcoming invoice resource. The recommended way to get only the prorations being previewed is to consider only proration line items where <code>period[start]</code> is equal to the <code>subscription_proration_date</code> on the upcoming invoice resource.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInvoicesUpcoming.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetInvoicesUpcomingLines": {
            "main": "./lib/actions/GetInvoicesUpcomingLines.js",
            "title": "<p>When retrieving an upcoming invoice, you'll get a <strong>lines</strong> property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
            "description": "<p>When retrieving an upcoming invoice, you'll get a <strong>lines</strong> property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInvoicesUpcomingLines.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteInvoicesInvoice": {
            "main": "./lib/actions/DeleteInvoicesInvoice.js",
            "title": "<p>Permanently deletes a draft invoice. This cannot be undone. Attempts to delete invoices that are no longer in a draft state will fail; once an invoice has been finalized, it must be <a href=\"#void_invoice\">voided</a>.</p>",
            "description": "<p>Permanently deletes a draft invoice. This cannot be undone. Attempts to delete invoices that are no longer in a draft state will fail; once an invoice has been finalized, it must be <a href=\"#void_invoice\">voided</a>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteInvoicesInvoice.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetInvoicesInvoice": {
            "main": "./lib/actions/GetInvoicesInvoice.js",
            "title": "<p>Retrieves the invoice with the given ID.</p>",
            "description": "<p>Retrieves the invoice with the given ID.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInvoicesInvoice.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostInvoicesInvoice": {
            "main": "./lib/actions/PostInvoicesInvoice.js",
            "title": "<p>Draft invoices are fully editable. Once an invoice is <a href=\"/docs/billing/invoices/workflow#finalized\">finalized</a>,\nmonetary values, as well as <code>billing</code>, become uneditable.</p>\n\n<p>If you would like to stop the Stripe Billing engine from automatically finalizing, reattempting payments on,\nsending reminders for, or <a href=\"/docs/billing/invoices/reconciliation\">automatically reconciling</a> invoices, pass\n<code>auto_advance=false</code>.</p>",
            "description": "<p>Draft invoices are fully editable. Once an invoice is <a href=\"/docs/billing/invoices/workflow#finalized\">finalized</a>,\nmonetary values, as well as <code>billing</code>, become uneditable.</p>\n\n<p>If you would like to stop the Stripe Billing engine from automatically finalizing, reattempting payments on,\nsending reminders for, or <a href=\"/docs/billing/invoices/reconciliation\">automatically reconciling</a> invoices, pass\n<code>auto_advance=false</code>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoicesInvoice.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostInvoicesInvoiceFinalize": {
            "main": "./lib/actions/PostInvoicesInvoiceFinalize.js",
            "title": "<p>Stripe automatically finalizes drafts before sending and attempting payment on invoices. However, if you'd like to finalize a draft invoice manually, you can do so using this method.</p>",
            "description": "<p>Stripe automatically finalizes drafts before sending and attempting payment on invoices. However, if you'd like to finalize a draft invoice manually, you can do so using this method.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoicesInvoiceFinalize.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetInvoicesInvoiceLines": {
            "main": "./lib/actions/GetInvoicesInvoiceLines.js",
            "title": "<p>When retrieving an invoice, you'll get a <strong>lines</strong> property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
            "description": "<p>When retrieving an invoice, you'll get a <strong>lines</strong> property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInvoicesInvoiceLines.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostInvoicesInvoiceMarkUncollectible": {
            "main": "./lib/actions/PostInvoicesInvoiceMarkUncollectible.js",
            "title": "<p>Marking an invoice as uncollectible is useful for keeping track of bad debts that can be written off for accounting purposes.</p>",
            "description": "<p>Marking an invoice as uncollectible is useful for keeping track of bad debts that can be written off for accounting purposes.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoicesInvoiceMarkUncollectible.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostInvoicesInvoicePay": {
            "main": "./lib/actions/PostInvoicesInvoicePay.js",
            "title": "<p>Stripe automatically creates and then attempts to collect payment on invoices for customers on subscriptions according to your <a href=\"https://dashboard.stripe.com/account/recurring\">subscriptions settings</a>. However, if you'd like to attempt payment on an invoice out of the normal collection schedule or for some other reason, you can do so.</p>",
            "description": "<p>Stripe automatically creates and then attempts to collect payment on invoices for customers on subscriptions according to your <a href=\"https://dashboard.stripe.com/account/recurring\">subscriptions settings</a>. However, if you'd like to attempt payment on an invoice out of the normal collection schedule or for some other reason, you can do so.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoicesInvoicePay.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostInvoicesInvoiceSend": {
            "main": "./lib/actions/PostInvoicesInvoiceSend.js",
            "title": "<p>Stripe will automatically send invoices to customers according to your <a href=\"https://dashboard.stripe.com/account/recurring\">subscriptions settings</a>. However, if you'd like to manually send an invoice to your customer out of the normal schedule, you can do so. When sending invoices that have already been paid, there will be no reference to the payment in the email.</p>\n\n<p>Requests made in test-mode result in no emails being sent, despite sending an <code>invoice.sent</code> event.</p>",
            "description": "<p>Stripe will automatically send invoices to customers according to your <a href=\"https://dashboard.stripe.com/account/recurring\">subscriptions settings</a>. However, if you'd like to manually send an invoice to your customer out of the normal schedule, you can do so. When sending invoices that have already been paid, there will be no reference to the payment in the email.</p>\n\n<p>Requests made in test-mode result in no emails being sent, despite sending an <code>invoice.sent</code> event.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoicesInvoiceSend.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostInvoicesInvoiceVoid": {
            "main": "./lib/actions/PostInvoicesInvoiceVoid.js",
            "title": "<p>Mark a finalized invoice as void. This cannot be undone. Voiding an invoice is similar to <a href=\"#delete_invoice\">deletion</a>, however it only applies to finalized invoices and maintains a papertrail where the invoice can still be found.</p>",
            "description": "<p>Mark a finalized invoice as void. This cannot be undone. Voiding an invoice is similar to <a href=\"#delete_invoice\">deletion</a>, however it only applies to finalized invoices and maintains a papertrail where the invoice can still be found.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoicesInvoiceVoid.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuerFraudRecords": {
            "main": "./lib/actions/GetIssuerFraudRecords.js",
            "title": "<p>Returns a list of issuer fraud records.</p>",
            "description": "<p>Returns a list of issuer fraud records.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuerFraudRecords.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuerFraudRecordsIssuerFraudRecord": {
            "main": "./lib/actions/GetIssuerFraudRecordsIssuerFraudRecord.js",
            "title": "<p>Retrieves the details of an issuer fraud record that has previously been created. </p>\n\n<p>Please refer to the <a href=\"#issuer_fraud_record_object\">issuer fraud record</a> object reference for more details.</p>",
            "description": "<p>Retrieves the details of an issuer fraud record that has previously been created. </p>\n\n<p>Please refer to the <a href=\"#issuer_fraud_record_object\">issuer fraud record</a> object reference for more details.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuerFraudRecordsIssuerFraudRecord.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuingAuthorizations": {
            "main": "./lib/actions/GetIssuingAuthorizations.js",
            "title": "<p>Returns a list of Issuing <code>Authorization</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "description": "<p>Returns a list of Issuing <code>Authorization</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingAuthorizations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuingAuthorizationsAuthorization": {
            "main": "./lib/actions/GetIssuingAuthorizationsAuthorization.js",
            "title": "<p>Retrieves an Issuing <code>Authorization</code> object.</p>",
            "description": "<p>Retrieves an Issuing <code>Authorization</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingAuthorizationsAuthorization.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostIssuingAuthorizationsAuthorization": {
            "main": "./lib/actions/PostIssuingAuthorizationsAuthorization.js",
            "title": "<p>Updates the specified Issuing <code>Authorization</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "description": "<p>Updates the specified Issuing <code>Authorization</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingAuthorizationsAuthorization.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostIssuingAuthorizationsAuthorizationApprove": {
            "main": "./lib/actions/PostIssuingAuthorizationsAuthorizationApprove.js",
            "title": "<p>Approves a pending Issuing <code>Authorization</code> object.</p>",
            "description": "<p>Approves a pending Issuing <code>Authorization</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingAuthorizationsAuthorizationApprove.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostIssuingAuthorizationsAuthorizationDecline": {
            "main": "./lib/actions/PostIssuingAuthorizationsAuthorizationDecline.js",
            "title": "<p>Declines a pending Issuing <code>Authorization</code> object.</p>",
            "description": "<p>Declines a pending Issuing <code>Authorization</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingAuthorizationsAuthorizationDecline.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuingCardholders": {
            "main": "./lib/actions/GetIssuingCardholders.js",
            "title": "<p>Returns a list of Issuing <code>Cardholder</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "description": "<p>Returns a list of Issuing <code>Cardholder</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingCardholders.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostIssuingCardholders": {
            "main": "./lib/actions/PostIssuingCardholders.js",
            "title": "<p>Creates a new Issuing <code>Cardholder</code> object that can be issued cards.</p>",
            "description": "<p>Creates a new Issuing <code>Cardholder</code> object that can be issued cards.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingCardholders.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuingCardholdersCardholder": {
            "main": "./lib/actions/GetIssuingCardholdersCardholder.js",
            "title": "<p>Retrieves an Issuing <code>Cardholder</code> object.</p>",
            "description": "<p>Retrieves an Issuing <code>Cardholder</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingCardholdersCardholder.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostIssuingCardholdersCardholder": {
            "main": "./lib/actions/PostIssuingCardholdersCardholder.js",
            "title": "<p>Updates the specified Issuing <code>Cardholder</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "description": "<p>Updates the specified Issuing <code>Cardholder</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingCardholdersCardholder.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuingCards": {
            "main": "./lib/actions/GetIssuingCards.js",
            "title": "<p>Returns a list of Issuing <code>Card</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "description": "<p>Returns a list of Issuing <code>Card</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingCards.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostIssuingCards": {
            "main": "./lib/actions/PostIssuingCards.js",
            "title": "<p>Creates an Issuing <code>Card</code> object.</p>",
            "description": "<p>Creates an Issuing <code>Card</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingCards.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuingCardsCard": {
            "main": "./lib/actions/GetIssuingCardsCard.js",
            "title": "<p>Retrieves an Issuing <code>Card</code> object.</p>",
            "description": "<p>Retrieves an Issuing <code>Card</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingCardsCard.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostIssuingCardsCard": {
            "main": "./lib/actions/PostIssuingCardsCard.js",
            "title": "<p>Updates the specified Issuing <code>Card</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "description": "<p>Updates the specified Issuing <code>Card</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingCardsCard.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuingCardsCardDetails": {
            "main": "./lib/actions/GetIssuingCardsCardDetails.js",
            "title": "<p>For virtual cards only. Retrieves an Issuing <code>Card_details</code> object that contains <a href=\"/docs/issuing/cards/management#virtual-card-info\">the sensitive details</a> of a virtual card.</p>",
            "description": "<p>For virtual cards only. Retrieves an Issuing <code>Card_details</code> object that contains <a href=\"/docs/issuing/cards/management#virtual-card-info\">the sensitive details</a> of a virtual card.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingCardsCardDetails.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuingCardsCardPin": {
            "main": "./lib/actions/GetIssuingCardsCardPin.js",
            "title": "<p>Retrieves the PIN for a card object, subject to cardholder verification, see <a href=\"/docs/issuing/pin_management\">Retrieve and update cardholder PIN</a></p>",
            "description": "<p>Retrieves the PIN for a card object, subject to cardholder verification, see <a href=\"/docs/issuing/pin_management\">Retrieve and update cardholder PIN</a></p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingCardsCardPin.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostIssuingCardsCardPin": {
            "main": "./lib/actions/PostIssuingCardsCardPin.js",
            "title": "<p>Updates the PIN for a card, subject to cardholder verification. See <a href=\"/docs/issuing/pin_management\">Retrieve and update cardholder PIN</a></p>",
            "description": "<p>Updates the PIN for a card, subject to cardholder verification. See <a href=\"/docs/issuing/pin_management\">Retrieve and update cardholder PIN</a></p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingCardsCardPin.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuingDisputes": {
            "main": "./lib/actions/GetIssuingDisputes.js",
            "title": "<p>Returns a list of Issuing <code>Dispute</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "description": "<p>Returns a list of Issuing <code>Dispute</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingDisputes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostIssuingDisputes": {
            "main": "./lib/actions/PostIssuingDisputes.js",
            "title": "<p>Creates an Issuing <code>Dispute</code> object.</p>",
            "description": "<p>Creates an Issuing <code>Dispute</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingDisputes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuingDisputesDispute": {
            "main": "./lib/actions/GetIssuingDisputesDispute.js",
            "title": "<p>Retrieves an Issuing <code>Dispute</code> object.</p>",
            "description": "<p>Retrieves an Issuing <code>Dispute</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingDisputesDispute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostIssuingDisputesDispute": {
            "main": "./lib/actions/PostIssuingDisputesDispute.js",
            "title": "<p>Updates the specified Issuing <code>Dispute</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "description": "<p>Updates the specified Issuing <code>Dispute</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingDisputesDispute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuingSettlements": {
            "main": "./lib/actions/GetIssuingSettlements.js",
            "title": "<p>Returns a list of Issuing <code>Settlement</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "description": "<p>Returns a list of Issuing <code>Settlement</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingSettlements.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuingSettlementsSettlement": {
            "main": "./lib/actions/GetIssuingSettlementsSettlement.js",
            "title": "<p>Retrieves an Issuing <code>Settlement</code> object.</p>",
            "description": "<p>Retrieves an Issuing <code>Settlement</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingSettlementsSettlement.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostIssuingSettlementsSettlement": {
            "main": "./lib/actions/PostIssuingSettlementsSettlement.js",
            "title": "<p>Updates the specified Issuing <code>Settlement</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "description": "<p>Updates the specified Issuing <code>Settlement</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingSettlementsSettlement.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuingTransactions": {
            "main": "./lib/actions/GetIssuingTransactions.js",
            "title": "<p>Returns a list of Issuing <code>Transaction</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "description": "<p>Returns a list of Issuing <code>Transaction</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingTransactions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetIssuingTransactionsTransaction": {
            "main": "./lib/actions/GetIssuingTransactionsTransaction.js",
            "title": "<p>Retrieves an Issuing <code>Transaction</code> object.</p>",
            "description": "<p>Retrieves an Issuing <code>Transaction</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingTransactionsTransaction.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostIssuingTransactionsTransaction": {
            "main": "./lib/actions/PostIssuingTransactionsTransaction.js",
            "title": "<p>Updates the specified Issuing <code>Transaction</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "description": "<p>Updates the specified Issuing <code>Transaction</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingTransactionsTransaction.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostIssuingVerifications": {
            "main": "./lib/actions/PostIssuingVerifications.js",
            "title": "<p>Some actions (eg: updating a PIN) need confirmation from the cardholder</p>",
            "description": "<p>Some actions (eg: updating a PIN) need confirmation from the cardholder</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingVerifications.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetOrderReturns": {
            "main": "./lib/actions/GetOrderReturns.js",
            "title": "<p>Returns a list of your order returns. The returns are returned sorted by creation date, with the most recently created return appearing first.</p>",
            "description": "<p>Returns a list of your order returns. The returns are returned sorted by creation date, with the most recently created return appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetOrderReturns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetOrderReturnsId": {
            "main": "./lib/actions/GetOrderReturnsId.js",
            "title": "<p>Retrieves the details of an existing order return. Supply the unique order ID from either an order return creation request or the order return list, and Stripe will return the corresponding order information.</p>",
            "description": "<p>Retrieves the details of an existing order return. Supply the unique order ID from either an order return creation request or the order return list, and Stripe will return the corresponding order information.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetOrderReturnsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetOrders": {
            "main": "./lib/actions/GetOrders.js",
            "title": "<p>Returns a list of your orders. The orders are returned sorted by creation date, with the most recently created orders appearing first.</p>",
            "description": "<p>Returns a list of your orders. The orders are returned sorted by creation date, with the most recently created orders appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetOrders.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostOrders": {
            "main": "./lib/actions/PostOrders.js",
            "title": "<p>Creates a new order object.</p>",
            "description": "<p>Creates a new order object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostOrders.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetOrdersId": {
            "main": "./lib/actions/GetOrdersId.js",
            "title": "<p>Retrieves the details of an existing order. Supply the unique order ID from either an order creation request or the order list, and Stripe will return the corresponding order information.</p>",
            "description": "<p>Retrieves the details of an existing order. Supply the unique order ID from either an order creation request or the order list, and Stripe will return the corresponding order information.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetOrdersId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostOrdersId": {
            "main": "./lib/actions/PostOrdersId.js",
            "title": "<p>Updates the specific order by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "description": "<p>Updates the specific order by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostOrdersId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostOrdersIdPay": {
            "main": "./lib/actions/PostOrdersIdPay.js",
            "title": "<p>Pay an order by providing a <code>source</code> to create a payment.</p>",
            "description": "<p>Pay an order by providing a <code>source</code> to create a payment.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostOrdersIdPay.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostOrdersIdReturns": {
            "main": "./lib/actions/PostOrdersIdReturns.js",
            "title": "<p>Return all or part of an order. The order must have a status of <code>paid</code> or <code>fulfilled</code> before it can be returned. Once all items have been returned, the order will become <code>canceled</code> or <code>returned</code> depending on which status the order started in.</p>",
            "description": "<p>Return all or part of an order. The order must have a status of <code>paid</code> or <code>fulfilled</code> before it can be returned. Once all items have been returned, the order will become <code>canceled</code> or <code>returned</code> depending on which status the order started in.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostOrdersIdReturns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetPaymentIntents": {
            "main": "./lib/actions/GetPaymentIntents.js",
            "title": "<p>Returns a list of PaymentIntents.</p>",
            "description": "<p>Returns a list of PaymentIntents.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPaymentIntents.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostPaymentIntents": {
            "main": "./lib/actions/PostPaymentIntents.js",
            "title": "<p>Creates a PaymentIntent object.</p>",
            "description": "<p>Creates a PaymentIntent object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPaymentIntents.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetPaymentIntentsIntent": {
            "main": "./lib/actions/GetPaymentIntentsIntent.js",
            "title": "<p>Retrieves the details of a PaymentIntent that has previously been created. </p>\n\n<p>Client-side retrieval using a publishable key is allowed when the <code>client_secret</code> is provided in the query string. </p>\n\n<p>When retrieved with a publishable key, only a subset of properties will be returned. Please refer to the <a href=\"#payment_intent_object\">payment intent</a> object reference for more details.</p>",
            "description": "<p>Retrieves the details of a PaymentIntent that has previously been created. </p>\n\n<p>Client-side retrieval using a publishable key is allowed when the <code>client_secret</code> is provided in the query string. </p>\n\n<p>When retrieved with a publishable key, only a subset of properties will be returned. Please refer to the <a href=\"#payment_intent_object\">payment intent</a> object reference for more details.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPaymentIntentsIntent.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostPaymentIntentsIntent": {
            "main": "./lib/actions/PostPaymentIntentsIntent.js",
            "title": "<p>Updates a PaymentIntent object.</p>",
            "description": "<p>Updates a PaymentIntent object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPaymentIntentsIntent.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostPaymentIntentsIntentCancel": {
            "main": "./lib/actions/PostPaymentIntentsIntentCancel.js",
            "title": "<p>A PaymentIntent object can be canceled when it is in one of these statuses: requires_payment_method, requires_capture, requires_confirmation, requires_action. </p>\n\n<p>Once canceled, no additional charges will be made by the PaymentIntent and any operations on the PaymentIntent will fail with an error. For PaymentIntents with <code>status='requires_capture'</code>, the remaining <code>amount_capturable</code> will automatically be refunded.</p>",
            "description": "<p>A PaymentIntent object can be canceled when it is in one of these statuses: requires_payment_method, requires_capture, requires_confirmation, requires_action. </p>\n\n<p>Once canceled, no additional charges will be made by the PaymentIntent and any operations on the PaymentIntent will fail with an error. For PaymentIntents with <code>status='requires_capture'</code>, the remaining <code>amount_capturable</code> will automatically be refunded.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPaymentIntentsIntentCancel.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostPaymentIntentsIntentCapture": {
            "main": "./lib/actions/PostPaymentIntentsIntentCapture.js",
            "title": "<p>Capture the funds of an existing uncaptured PaymentIntent where <code>required_action=\"requires_capture\"</code>.</p>\n\n<p>Uncaptured PaymentIntents will be canceled exactly seven days after they are created.</p>",
            "description": "<p>Capture the funds of an existing uncaptured PaymentIntent where <code>required_action=\"requires_capture\"</code>.</p>\n\n<p>Uncaptured PaymentIntents will be canceled exactly seven days after they are created.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPaymentIntentsIntentCapture.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostPaymentIntentsIntentConfirm": {
            "main": "./lib/actions/PostPaymentIntentsIntentConfirm.js",
            "title": "<p>Confirm that your customer intends to pay with current or provided\n<code>source</code>. Upon confirmation, the PaymentIntent will attempt to initiate\na payment.</p>\n\n<p>If the selected <code>source</code> requires additional authentication steps, the\nPaymentIntent will transition to the <code>requires_action</code> status and\nsuggest additional actions via <code>next_source_action</code>. If payment fails,\nthe PaymentIntent will transition to the <code>requires_payment_method</code> status. If\npayment succeeds, the PaymentIntent will transition to the <code>succeeded</code>\nstatus (or <code>requires_capture</code>, if <code>capture_method</code> is set to <code>manual</code>).</p>\n\n<p>When using a publishable key, the\n<a href=\"#payment_intent_object-client_secret\">client_secret</a> must be provided\nto confirm the PaymentIntent.</p>",
            "description": "<p>Confirm that your customer intends to pay with current or provided\n<code>source</code>. Upon confirmation, the PaymentIntent will attempt to initiate\na payment.</p>\n\n<p>If the selected <code>source</code> requires additional authentication steps, the\nPaymentIntent will transition to the <code>requires_action</code> status and\nsuggest additional actions via <code>next_source_action</code>. If payment fails,\nthe PaymentIntent will transition to the <code>requires_payment_method</code> status. If\npayment succeeds, the PaymentIntent will transition to the <code>succeeded</code>\nstatus (or <code>requires_capture</code>, if <code>capture_method</code> is set to <code>manual</code>).</p>\n\n<p>When using a publishable key, the\n<a href=\"#payment_intent_object-client_secret\">client_secret</a> must be provided\nto confirm the PaymentIntent.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPaymentIntentsIntentConfirm.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetPayouts": {
            "main": "./lib/actions/GetPayouts.js",
            "title": "<p>Returns a list of existing payouts sent to third-party bank accounts or that Stripe has sent you. The payouts are returned in sorted order, with the most recently created payouts appearing first.</p>",
            "description": "<p>Returns a list of existing payouts sent to third-party bank accounts or that Stripe has sent you. The payouts are returned in sorted order, with the most recently created payouts appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPayouts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostPayouts": {
            "main": "./lib/actions/PostPayouts.js",
            "title": "<p>To send funds to your own bank account, you create a new payout object. Your <a href=\"#balance\">Stripe balance</a> must be able to cover the payout amount, or you'll receive an \"Insufficient Funds\" error.</p>\n\n<p>If your API key is in test mode, money won't actually be sent, though everything else will occur as if in live mode.</p>\n\n<p>If you are creating a manual payout on a Stripe account that uses multiple payment source types, you'll need to specify the source type balance that the payout should draw from. The <a href=\"#balance_object\">balance object</a> details available and pending amounts by source type.</p>",
            "description": "<p>To send funds to your own bank account, you create a new payout object. Your <a href=\"#balance\">Stripe balance</a> must be able to cover the payout amount, or you'll receive an \"Insufficient Funds\" error.</p>\n\n<p>If your API key is in test mode, money won't actually be sent, though everything else will occur as if in live mode.</p>\n\n<p>If you are creating a manual payout on a Stripe account that uses multiple payment source types, you'll need to specify the source type balance that the payout should draw from. The <a href=\"#balance_object\">balance object</a> details available and pending amounts by source type.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPayouts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetPayoutsPayout": {
            "main": "./lib/actions/GetPayoutsPayout.js",
            "title": "<p>Retrieves the details of an existing payout. Supply the unique payout ID from either a payout creation request or the payout list, and Stripe will return the corresponding payout information.</p>",
            "description": "<p>Retrieves the details of an existing payout. Supply the unique payout ID from either a payout creation request or the payout list, and Stripe will return the corresponding payout information.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPayoutsPayout.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostPayoutsPayout": {
            "main": "./lib/actions/PostPayoutsPayout.js",
            "title": "<p>Updates the specified payout by setting the values of the parameters passed. Any parameters not provided will be left unchanged. This request accepts only the metadata as arguments.</p>",
            "description": "<p>Updates the specified payout by setting the values of the parameters passed. Any parameters not provided will be left unchanged. This request accepts only the metadata as arguments.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPayoutsPayout.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostPayoutsPayoutCancel": {
            "main": "./lib/actions/PostPayoutsPayoutCancel.js",
            "title": "<p>A previously created payout can be canceled if it has not yet been paid out. Funds will be refunded to your available balance. You may not cancel automatic Stripe payouts.</p>",
            "description": "<p>A previously created payout can be canceled if it has not yet been paid out. Funds will be refunded to your available balance. You may not cancel automatic Stripe payouts.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPayoutsPayoutCancel.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetPlans": {
            "main": "./lib/actions/GetPlans.js",
            "title": "<p>Returns a list of your plans.</p>",
            "description": "<p>Returns a list of your plans.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPlans.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostPlans": {
            "main": "./lib/actions/PostPlans.js",
            "title": "<p>You can create plans using the API, or in the Stripe <a href=\"https://dashboard.stripe.com/subscriptions/products\">Dashboard</a>.</p>",
            "description": "<p>You can create plans using the API, or in the Stripe <a href=\"https://dashboard.stripe.com/subscriptions/products\">Dashboard</a>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPlans.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeletePlansPlan": {
            "main": "./lib/actions/DeletePlansPlan.js",
            "title": "<p>Deleting plans means new subscribers can't be added. Existing subscribers aren't affected.</p>",
            "description": "<p>Deleting plans means new subscribers can't be added. Existing subscribers aren't affected.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeletePlansPlan.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetPlansPlan": {
            "main": "./lib/actions/GetPlansPlan.js",
            "title": "<p>Retrieves the plan with the given ID.</p>",
            "description": "<p>Retrieves the plan with the given ID.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPlansPlan.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostPlansPlan": {
            "main": "./lib/actions/PostPlansPlan.js",
            "title": "<p>Updates the specified plan by setting the values of the parameters passed. Any parameters not provided are left unchanged. By design, you cannot change a plan's ID, amount, currency, or billing cycle.</p>",
            "description": "<p>Updates the specified plan by setting the values of the parameters passed. Any parameters not provided are left unchanged. By design, you cannot change a plan's ID, amount, currency, or billing cycle.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPlansPlan.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetProducts": {
            "main": "./lib/actions/GetProducts.js",
            "title": "<p>Returns a list of your products. The products are returned sorted by creation date, with the most recently created products appearing first.</p>",
            "description": "<p>Returns a list of your products. The products are returned sorted by creation date, with the most recently created products appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetProducts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostProducts": {
            "main": "./lib/actions/PostProducts.js",
            "title": "<p>Creates a new product object. To create a product for use with subscriptions, see <a href=\"#create_service_product\">Subscriptions Products</a>.</p>",
            "description": "<p>Creates a new product object. To create a product for use with subscriptions, see <a href=\"#create_service_product\">Subscriptions Products</a>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostProducts.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteProductsId": {
            "main": "./lib/actions/DeleteProductsId.js",
            "title": "<p>Delete a product. Deleting a product with type=<code>good</code> is only possible if it has no SKUs associated with it. Deleting a product with type=<code>service</code> is only possible if it has no plans associated with it.</p>",
            "description": "<p>Delete a product. Deleting a product with type=<code>good</code> is only possible if it has no SKUs associated with it. Deleting a product with type=<code>service</code> is only possible if it has no plans associated with it.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteProductsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetProductsId": {
            "main": "./lib/actions/GetProductsId.js",
            "title": "<p>Retrieves the details of an existing product. Supply the unique product ID from either a product creation request or the product list, and Stripe will return the corresponding product information.</p>",
            "description": "<p>Retrieves the details of an existing product. Supply the unique product ID from either a product creation request or the product list, and Stripe will return the corresponding product information.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetProductsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostProductsId": {
            "main": "./lib/actions/PostProductsId.js",
            "title": "<p>Updates the specific product by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>Note that a product's <code>attributes</code> are not editable. Instead, you would need to deactivate the existing product and create a new one with the new attribute values.</p>",
            "description": "<p>Updates the specific product by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>Note that a product's <code>attributes</code> are not editable. Instead, you would need to deactivate the existing product and create a new one with the new attribute values.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostProductsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRadarValueListItems": {
            "main": "./lib/actions/GetRadarValueListItems.js",
            "title": "<p>Returns a list of <code>ValueListItem</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "description": "<p>Returns a list of <code>ValueListItem</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRadarValueListItems.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostRadarValueListItems": {
            "main": "./lib/actions/PostRadarValueListItems.js",
            "title": "<p>Creates a new <code>ValueListItem</code> object, which is added to the specified parent value list.</p>",
            "description": "<p>Creates a new <code>ValueListItem</code> object, which is added to the specified parent value list.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostRadarValueListItems.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteRadarValueListItemsItem": {
            "main": "./lib/actions/DeleteRadarValueListItemsItem.js",
            "title": "<p>Deletes a <code>ValueListItem</code> object, removing it from its parent value list.</p>",
            "description": "<p>Deletes a <code>ValueListItem</code> object, removing it from its parent value list.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteRadarValueListItemsItem.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRadarValueListItemsItem": {
            "main": "./lib/actions/GetRadarValueListItemsItem.js",
            "title": "<p>Retrieves a <code>ValueListItem</code> object.</p>",
            "description": "<p>Retrieves a <code>ValueListItem</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRadarValueListItemsItem.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRadarValueLists": {
            "main": "./lib/actions/GetRadarValueLists.js",
            "title": "<p>Returns a list of <code>ValueList</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "description": "<p>Returns a list of <code>ValueList</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRadarValueLists.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostRadarValueLists": {
            "main": "./lib/actions/PostRadarValueLists.js",
            "title": "<p>Creates a new <code>ValueList</code> object, which can then be referenced in rules.</p>",
            "description": "<p>Creates a new <code>ValueList</code> object, which can then be referenced in rules.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostRadarValueLists.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteRadarValueListsValueList": {
            "main": "./lib/actions/DeleteRadarValueListsValueList.js",
            "title": "<p>Deletes a <code>ValueList</code> object, also deleting any items contained within the value list. To be deleted, a value list must not be referenced in any rules.</p>",
            "description": "<p>Deletes a <code>ValueList</code> object, also deleting any items contained within the value list. To be deleted, a value list must not be referenced in any rules.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteRadarValueListsValueList.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRadarValueListsValueList": {
            "main": "./lib/actions/GetRadarValueListsValueList.js",
            "title": "<p>Retrieves a <code>ValueList</code> object.</p>",
            "description": "<p>Retrieves a <code>ValueList</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRadarValueListsValueList.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostRadarValueListsValueList": {
            "main": "./lib/actions/PostRadarValueListsValueList.js",
            "title": "<p>Updates a <code>ValueList</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Note that <code>item_type</code> is immutable.</p>",
            "description": "<p>Updates a <code>ValueList</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Note that <code>item_type</code> is immutable.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostRadarValueListsValueList.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRecipients": {
            "main": "./lib/actions/GetRecipients.js",
            "title": "<p>Returns a list of your recipients. The recipients are returned sorted by creation date, with the most recently created recipients appearing first.</p>",
            "description": "<p>Returns a list of your recipients. The recipients are returned sorted by creation date, with the most recently created recipients appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRecipients.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostRecipients": {
            "main": "./lib/actions/PostRecipients.js",
            "title": "<p>Creates a new <code>Recipient</code> object and verifies the recipient's identity.\nAlso verifies the recipient's bank account information or debit card, if either is provided.</p>",
            "description": "<p>Creates a new <code>Recipient</code> object and verifies the recipient's identity.\nAlso verifies the recipient's bank account information or debit card, if either is provided.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostRecipients.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteRecipientsId": {
            "main": "./lib/actions/DeleteRecipientsId.js",
            "title": "<p>Permanently deletes a recipient. It cannot be undone.</p>",
            "description": "<p>Permanently deletes a recipient. It cannot be undone.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteRecipientsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRecipientsId": {
            "main": "./lib/actions/GetRecipientsId.js",
            "title": "<p>Retrieves the details of an existing recipient. You need only supply the unique recipient identifier that was returned upon recipient creation.</p>",
            "description": "<p>Retrieves the details of an existing recipient. You need only supply the unique recipient identifier that was returned upon recipient creation.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRecipientsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostRecipientsId": {
            "main": "./lib/actions/PostRecipientsId.js",
            "title": "<p>Updates the specified recipient by setting the values of the parameters passed.\nAny parameters not provided will be left unchanged.</p>\n\n<p>If you update the name or tax ID, the identity verification will automatically be rerun.\nIf you update the bank account, the bank account validation will automatically be rerun.</p>",
            "description": "<p>Updates the specified recipient by setting the values of the parameters passed.\nAny parameters not provided will be left unchanged.</p>\n\n<p>If you update the name or tax ID, the identity verification will automatically be rerun.\nIf you update the bank account, the bank account validation will automatically be rerun.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostRecipientsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRefunds": {
            "main": "./lib/actions/GetRefunds.js",
            "title": "<p>Returns a list of all refunds you've previously created. The refunds are returned in sorted order, with the most recent refunds appearing first. For convenience, the 10 most recent refunds are always available by default on the charge object.</p>",
            "description": "<p>Returns a list of all refunds you've previously created. The refunds are returned in sorted order, with the most recent refunds appearing first. For convenience, the 10 most recent refunds are always available by default on the charge object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRefunds.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostRefunds": {
            "main": "./lib/actions/PostRefunds.js",
            "title": "<p>Create a refund.</p>",
            "description": "<p>Create a refund.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostRefunds.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetRefundsRefund": {
            "main": "./lib/actions/GetRefundsRefund.js",
            "title": "<p>Retrieves the details of an existing refund.</p>",
            "description": "<p>Retrieves the details of an existing refund.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRefundsRefund.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostRefundsRefund": {
            "main": "./lib/actions/PostRefundsRefund.js",
            "title": "<p>Updates the specified refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request only accepts <code>metadata</code> as an argument.</p>",
            "description": "<p>Updates the specified refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request only accepts <code>metadata</code> as an argument.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostRefundsRefund.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetReportingReportRuns": {
            "main": "./lib/actions/GetReportingReportRuns.js",
            "title": "<p>Returns a list of Report Runs, with the most recent appearing first. (Requires a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>",
            "description": "<p>Returns a list of Report Runs, with the most recent appearing first. (Requires a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetReportingReportRuns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostReportingReportRuns": {
            "main": "./lib/actions/PostReportingReportRuns.js",
            "title": "<p>Creates a new object and begin running the report. (Requires a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>",
            "description": "<p>Creates a new object and begin running the report. (Requires a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostReportingReportRuns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetReportingReportRunsReportRun": {
            "main": "./lib/actions/GetReportingReportRunsReportRun.js",
            "title": "<p>Retrieves the details of an existing Report Run. (Requires a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>",
            "description": "<p>Retrieves the details of an existing Report Run. (Requires a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetReportingReportRunsReportRun.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetReportingReportTypes": {
            "main": "./lib/actions/GetReportingReportTypes.js",
            "title": "<p>Returns a full list of Report Types. (Requires a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>",
            "description": "<p>Returns a full list of Report Types. (Requires a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetReportingReportTypes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetReportingReportTypesReportType": {
            "main": "./lib/actions/GetReportingReportTypesReportType.js",
            "title": "<p>Retrieves the details of a Report Type. (Requires a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>",
            "description": "<p>Retrieves the details of a Report Type. (Requires a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetReportingReportTypesReportType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetReviews": {
            "main": "./lib/actions/GetReviews.js",
            "title": "<p>Returns a list of <code>Review</code> objects that have <code>open</code> set to <code>true</code>. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "description": "<p>Returns a list of <code>Review</code> objects that have <code>open</code> set to <code>true</code>. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetReviews.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetReviewsReview": {
            "main": "./lib/actions/GetReviewsReview.js",
            "title": "<p>Retrieves a <code>Review</code> object.</p>",
            "description": "<p>Retrieves a <code>Review</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetReviewsReview.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostReviewsReviewApprove": {
            "main": "./lib/actions/PostReviewsReviewApprove.js",
            "title": "<p>Approves a <code>Review</code> object, closing it and removing it from the list of reviews.</p>",
            "description": "<p>Approves a <code>Review</code> object, closing it and removing it from the list of reviews.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostReviewsReviewApprove.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSigmaScheduledQueryRuns": {
            "main": "./lib/actions/GetSigmaScheduledQueryRuns.js",
            "title": "<p>Returns a list of scheduled query runs.</p>",
            "description": "<p>Returns a list of scheduled query runs.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSigmaScheduledQueryRuns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSigmaScheduledQueryRunsScheduledQueryRun": {
            "main": "./lib/actions/GetSigmaScheduledQueryRunsScheduledQueryRun.js",
            "title": "<p>Retrieves the details of an scheduled query run.</p>",
            "description": "<p>Retrieves the details of an scheduled query run.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSigmaScheduledQueryRunsScheduledQueryRun.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSkus": {
            "main": "./lib/actions/GetSkus.js",
            "title": "<p>Returns a list of your SKUs. The SKUs are returned sorted by creation date, with the most recently created SKUs appearing first.</p>",
            "description": "<p>Returns a list of your SKUs. The SKUs are returned sorted by creation date, with the most recently created SKUs appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSkus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostSkus": {
            "main": "./lib/actions/PostSkus.js",
            "title": "<p>Creates a new SKU associated with a product.</p>",
            "description": "<p>Creates a new SKU associated with a product.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSkus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteSkusId": {
            "main": "./lib/actions/DeleteSkusId.js",
            "title": "<p>Delete a SKU. Deleting a SKU is only possible until it has been used in an order.</p>",
            "description": "<p>Delete a SKU. Deleting a SKU is only possible until it has been used in an order.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteSkusId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSkusId": {
            "main": "./lib/actions/GetSkusId.js",
            "title": "<p>Retrieves the details of an existing SKU. Supply the unique SKU identifier from either a SKU creation request or from the product, and Stripe will return the corresponding SKU information.</p>",
            "description": "<p>Retrieves the details of an existing SKU. Supply the unique SKU identifier from either a SKU creation request or from the product, and Stripe will return the corresponding SKU information.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSkusId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostSkusId": {
            "main": "./lib/actions/PostSkusId.js",
            "title": "<p>Updates the specific SKU by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>Note that a SKU's <code>attributes</code> are not editable. Instead, you would need to deactivate the existing SKU and create a new one with the new attribute values.</p>",
            "description": "<p>Updates the specific SKU by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>Note that a SKU's <code>attributes</code> are not editable. Instead, you would need to deactivate the existing SKU and create a new one with the new attribute values.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSkusId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostSources": {
            "main": "./lib/actions/PostSources.js",
            "title": "<p>Creates a new source object.</p>",
            "description": "<p>Creates a new source object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSources.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSourcesSource": {
            "main": "./lib/actions/GetSourcesSource.js",
            "title": "<p>Retrieves an existing source object. Supply the unique source ID from a source creation request and Stripe will return the corresponding up-to-date source object information.</p>",
            "description": "<p>Retrieves an existing source object. Supply the unique source ID from a source creation request and Stripe will return the corresponding up-to-date source object information.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSourcesSource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostSourcesSource": {
            "main": "./lib/actions/PostSourcesSource.js",
            "title": "<p>Updates the specified source by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request accepts the <code>metadata</code> and <code>owner</code> as arguments. It is also possible to update type specific information for selected payment methods. Please refer to our <a href=\"/docs/sources\">payment method guides</a> for more detail.</p>",
            "description": "<p>Updates the specified source by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request accepts the <code>metadata</code> and <code>owner</code> as arguments. It is also possible to update type specific information for selected payment methods. Please refer to our <a href=\"/docs/sources\">payment method guides</a> for more detail.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSourcesSource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSourcesSourceMandateNotificationsMandateNotification": {
            "main": "./lib/actions/GetSourcesSourceMandateNotificationsMandateNotification.js",
            "title": "<p>Retrieves a new Source MandateNotification.</p>",
            "description": "<p>Retrieves a new Source MandateNotification.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSourcesSourceMandateNotificationsMandateNotification.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSourcesSourceSourceTransactions": {
            "main": "./lib/actions/GetSourcesSourceSourceTransactions.js",
            "title": "<p>List source transactions for a given source.</p>",
            "description": "<p>List source transactions for a given source.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSourcesSourceSourceTransactions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSourcesSourceSourceTransactionsSourceTransaction": {
            "main": "./lib/actions/GetSourcesSourceSourceTransactionsSourceTransaction.js",
            "title": "<p>Retrieve an existing source transaction object. Supply the unique source ID from a source creation request and the source transaction ID and Stripe will return the corresponding up-to-date source object information.</p>",
            "description": "<p>Retrieve an existing source transaction object. Supply the unique source ID from a source creation request and the source transaction ID and Stripe will return the corresponding up-to-date source object information.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSourcesSourceSourceTransactionsSourceTransaction.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostSourcesSourceVerify": {
            "main": "./lib/actions/PostSourcesSourceVerify.js",
            "title": "<p>Verify a given source.</p>",
            "description": "<p>Verify a given source.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSourcesSourceVerify.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSubscriptionItems": {
            "main": "./lib/actions/GetSubscriptionItems.js",
            "title": "<p>Returns a list of your subscription items for a given subscription.</p>",
            "description": "<p>Returns a list of your subscription items for a given subscription.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptionItems.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostSubscriptionItems": {
            "main": "./lib/actions/PostSubscriptionItems.js",
            "title": "<p>Adds a new item to an existing subscription. No existing items will be changed or replaced.</p>",
            "description": "<p>Adds a new item to an existing subscription. No existing items will be changed or replaced.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionItems.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteSubscriptionItemsItem": {
            "main": "./lib/actions/DeleteSubscriptionItemsItem.js",
            "title": "<p>Deletes an item from the subscription. Removing a subscription item from a subscription will not cancel the subscription.</p>",
            "description": "<p>Deletes an item from the subscription. Removing a subscription item from a subscription will not cancel the subscription.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteSubscriptionItemsItem.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSubscriptionItemsItem": {
            "main": "./lib/actions/GetSubscriptionItemsItem.js",
            "title": "<p>Retrieves the invoice item with the given ID.</p>",
            "description": "<p>Retrieves the invoice item with the given ID.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptionItemsItem.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostSubscriptionItemsItem": {
            "main": "./lib/actions/PostSubscriptionItemsItem.js",
            "title": "<p>Updates the plan or quantity of an item on a current subscription.</p>",
            "description": "<p>Updates the plan or quantity of an item on a current subscription.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionItemsItem.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSubscriptionItemsSubscriptionItemUsageRecordSummaries": {
            "main": "./lib/actions/GetSubscriptionItemsSubscriptionItemUsageRecordSummaries.js",
            "title": "<p>For the specified subscription item, returns a list of summary objects. Each object in the list provides usage information that's been summarized from multiple usage records and over a subscription billing period (e.g., 15 usage records in the billing plan's month of September).</p>\n\n<p>The list is sorted in reverse-chronological order (newest first). The first list item represents the most current usage period that hasn't ended yet. Since new usage records can still be added, the returned summary information for the subscription item's ID should be seen as unstable until the subscription billing period ends.</p>",
            "description": "<p>For the specified subscription item, returns a list of summary objects. Each object in the list provides usage information that's been summarized from multiple usage records and over a subscription billing period (e.g., 15 usage records in the billing plan's month of September).</p>\n\n<p>The list is sorted in reverse-chronological order (newest first). The first list item represents the most current usage period that hasn't ended yet. Since new usage records can still be added, the returned summary information for the subscription item's ID should be seen as unstable until the subscription billing period ends.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptionItemsSubscriptionItemUsageRecordSummaries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostSubscriptionItemsSubscriptionItemUsageRecords": {
            "main": "./lib/actions/PostSubscriptionItemsSubscriptionItemUsageRecords.js",
            "title": "<p>Creates a usage record for a specified subscription item and date, and fills it with a quantity.</p>\n\n<p>Usage records provide <code>quantity</code> information that Stripe uses to track how much a customer is using your service. With usage information and the pricing model set up by the <a href=\"https://stripe.com/docs/billing/subscriptions/metered-billing\">metered billing</a> plan, Stripe helps you send accurate invoices to your customers.</p>\n\n<p>The default calculation for usage is to add up all the <code>quantity</code> values of the usage records within a billing period. You can change this default behavior with the billing plan's <code>aggregate_usage</code> <a href=\"https://stripe.com/docs/api/plans/create#create_plan-aggregate_usage\">parameter</a>. When there is more than one usage record with the same timestamp, Stripe adds the <code>quantity</code> values together. In most cases, this is the desired resolution, however, you can change this behavior with the <code>action</code> parameter.</p>\n\n<p>The default pricing model for metered billing is <a href=\"https://stripe.com/docs/api/plans/object#plan_object-billing_scheme\">per-unit pricing</a>. For finer granularity, you can configure metered billing to have a <a href=\"https://stripe.com/docs/billing/subscriptions/tiers\">tiered pricing</a> model.</p>",
            "description": "<p>Creates a usage record for a specified subscription item and date, and fills it with a quantity.</p>\n\n<p>Usage records provide <code>quantity</code> information that Stripe uses to track how much a customer is using your service. With usage information and the pricing model set up by the <a href=\"https://stripe.com/docs/billing/subscriptions/metered-billing\">metered billing</a> plan, Stripe helps you send accurate invoices to your customers.</p>\n\n<p>The default calculation for usage is to add up all the <code>quantity</code> values of the usage records within a billing period. You can change this default behavior with the billing plan's <code>aggregate_usage</code> <a href=\"https://stripe.com/docs/api/plans/create#create_plan-aggregate_usage\">parameter</a>. When there is more than one usage record with the same timestamp, Stripe adds the <code>quantity</code> values together. In most cases, this is the desired resolution, however, you can change this behavior with the <code>action</code> parameter.</p>\n\n<p>The default pricing model for metered billing is <a href=\"https://stripe.com/docs/api/plans/object#plan_object-billing_scheme\">per-unit pricing</a>. For finer granularity, you can configure metered billing to have a <a href=\"https://stripe.com/docs/billing/subscriptions/tiers\">tiered pricing</a> model.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionItemsSubscriptionItemUsageRecords.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSubscriptionSchedules": {
            "main": "./lib/actions/GetSubscriptionSchedules.js",
            "title": "<p>Retrieves the list of your subscription schedules.</p>",
            "description": "<p>Retrieves the list of your subscription schedules.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptionSchedules.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostSubscriptionSchedules": {
            "main": "./lib/actions/PostSubscriptionSchedules.js",
            "title": "<p>Creates a new subscription schedule object.</p>",
            "description": "<p>Creates a new subscription schedule object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionSchedules.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSubscriptionSchedulesSchedule": {
            "main": "./lib/actions/GetSubscriptionSchedulesSchedule.js",
            "title": "<p>Retrieves the details of an existing subscription schedule. You only need to supply the unique subscription schedule identifier that was returned upon subscription schedule creation.</p>",
            "description": "<p>Retrieves the details of an existing subscription schedule. You only need to supply the unique subscription schedule identifier that was returned upon subscription schedule creation.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptionSchedulesSchedule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostSubscriptionSchedulesSchedule": {
            "main": "./lib/actions/PostSubscriptionSchedulesSchedule.js",
            "title": "<p>Updates an existing subscription schedule.</p>",
            "description": "<p>Updates an existing subscription schedule.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionSchedulesSchedule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostSubscriptionSchedulesScheduleCancel": {
            "main": "./lib/actions/PostSubscriptionSchedulesScheduleCancel.js",
            "title": "<p>Cancels a subscription schedule and its associated subscription immediately (if the subscription schedule has an active subscription). A subscription schedule can only be canceled if its status is <code>not_started</code> or <code>active</code>.</p>",
            "description": "<p>Cancels a subscription schedule and its associated subscription immediately (if the subscription schedule has an active subscription). A subscription schedule can only be canceled if its status is <code>not_started</code> or <code>active</code>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionSchedulesScheduleCancel.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostSubscriptionSchedulesScheduleRelease": {
            "main": "./lib/actions/PostSubscriptionSchedulesScheduleRelease.js",
            "title": "<p>Releases the subscription schedule immediately, which will stop scheduling of its phases, but leave any existing subscription in place. A schedule can only be released if its status is <code>not_started</code> or <code>active</code>. If the subscription schedule is currently associated with a subscription, releasing it will remove its <code>subscription</code> property and set the subscription's ID to the <code>released_subscription</code> property.</p>",
            "description": "<p>Releases the subscription schedule immediately, which will stop scheduling of its phases, but leave any existing subscription in place. A schedule can only be released if its status is <code>not_started</code> or <code>active</code>. If the subscription schedule is currently associated with a subscription, releasing it will remove its <code>subscription</code> property and set the subscription's ID to the <code>released_subscription</code> property.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionSchedulesScheduleRelease.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSubscriptionSchedulesScheduleRevisions": {
            "main": "./lib/actions/GetSubscriptionSchedulesScheduleRevisions.js",
            "title": "<p>Retrieves the list of subscription schedule revisions for a subscription schedule.</p>",
            "description": "<p>Retrieves the list of subscription schedule revisions for a subscription schedule.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptionSchedulesScheduleRevisions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSubscriptionSchedulesScheduleRevisionsRevision": {
            "main": "./lib/actions/GetSubscriptionSchedulesScheduleRevisionsRevision.js",
            "title": "<p>Retrieves the details of an existing subscription schedule revision. You only need to supply the unique subscription schedule revision identifier that was returned upon subscription schedule creation or retrieval.</p>",
            "description": "<p>Retrieves the details of an existing subscription schedule revision. You only need to supply the unique subscription schedule revision identifier that was returned upon subscription schedule creation or retrieval.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptionSchedulesScheduleRevisionsRevision.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSubscriptions": {
            "main": "./lib/actions/GetSubscriptions.js",
            "title": "<p>By default, returns a list of subscriptions that have not been canceled. In order to list canceled subscriptions, specify <code>status=canceled</code>.</p>",
            "description": "<p>By default, returns a list of subscriptions that have not been canceled. In order to list canceled subscriptions, specify <code>status=canceled</code>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostSubscriptions": {
            "main": "./lib/actions/PostSubscriptions.js",
            "title": "<p>Creates a new subscription on an existing customer.</p>",
            "description": "<p>Creates a new subscription on an existing customer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteSubscriptionsSubscriptionExposedId": {
            "main": "./lib/actions/DeleteSubscriptionsSubscriptionExposedId.js",
            "title": "<p>Cancels a customer's subscription immediately. The customer will not be charged again for the subscription.</p>\n\n<p>Note, however, that any pending invoice items that you've created will still be charged for at the end of the period, unless manually <a href=\"#delete_invoiceitem\">deleted</a>. If you've set the subscription to cancel at the end of the period, any pending prorations will also be left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations will be removed.</p>\n\n<p>By default, upon subscription cancellation, Stripe will stop automatic collection of all finalized invoices for the customer. This is intended to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can resume automatic collection of the invoices manually after subscription cancellation to have us proceed. Or, you could check for unpaid invoices before allowing the customer to cancel the subscription at all.</p>",
            "description": "<p>Cancels a customer's subscription immediately. The customer will not be charged again for the subscription.</p>\n\n<p>Note, however, that any pending invoice items that you've created will still be charged for at the end of the period, unless manually <a href=\"#delete_invoiceitem\">deleted</a>. If you've set the subscription to cancel at the end of the period, any pending prorations will also be left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations will be removed.</p>\n\n<p>By default, upon subscription cancellation, Stripe will stop automatic collection of all finalized invoices for the customer. This is intended to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can resume automatic collection of the invoices manually after subscription cancellation to have us proceed. Or, you could check for unpaid invoices before allowing the customer to cancel the subscription at all.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteSubscriptionsSubscriptionExposedId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSubscriptionsSubscriptionExposedId": {
            "main": "./lib/actions/GetSubscriptionsSubscriptionExposedId.js",
            "title": "<p>Retrieves the subscription with the given ID.</p>",
            "description": "<p>Retrieves the subscription with the given ID.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptionsSubscriptionExposedId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostSubscriptionsSubscriptionExposedId": {
            "main": "./lib/actions/PostSubscriptionsSubscriptionExposedId.js",
            "title": "<p>Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes. To preview how the proration will be calculated, use the <a href=\"#upcoming_invoice\">upcoming invoice</a> endpoint.</p>",
            "description": "<p>Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes. To preview how the proration will be calculated, use the <a href=\"#upcoming_invoice\">upcoming invoice</a> endpoint.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionsSubscriptionExposedId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteSubscriptionsSubscriptionExposedIdDiscount": {
            "main": "./lib/actions/DeleteSubscriptionsSubscriptionExposedIdDiscount.js",
            "title": "<p>Removes the currently applied discount on a subscription.</p>",
            "description": "<p>Removes the currently applied discount on a subscription.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteSubscriptionsSubscriptionExposedIdDiscount.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostTerminalConnectionTokens": {
            "main": "./lib/actions/PostTerminalConnectionTokens.js",
            "title": "<p>To connect to a reader the Stripe Terminal SDK needs to retrieve a short-lived connection token from Stripe, proxied through your server. On your backend, add an endpoint that creates and returns a connection token.</p>",
            "description": "<p>To connect to a reader the Stripe Terminal SDK needs to retrieve a short-lived connection token from Stripe, proxied through your server. On your backend, add an endpoint that creates and returns a connection token.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTerminalConnectionTokens.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTerminalLocations": {
            "main": "./lib/actions/GetTerminalLocations.js",
            "title": "<p>Returns a list of <code>Location</code> objects.</p>",
            "description": "<p>Returns a list of <code>Location</code> objects.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTerminalLocations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostTerminalLocations": {
            "main": "./lib/actions/PostTerminalLocations.js",
            "title": "<p>Creates a new <code>Location</code> object.</p>",
            "description": "<p>Creates a new <code>Location</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTerminalLocations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTerminalLocationsLocation": {
            "main": "./lib/actions/GetTerminalLocationsLocation.js",
            "title": "<p>Retrieves a <code>Location</code> object.</p>",
            "description": "<p>Retrieves a <code>Location</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTerminalLocationsLocation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostTerminalLocationsLocation": {
            "main": "./lib/actions/PostTerminalLocationsLocation.js",
            "title": "<p>Updates a <code>Location</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "description": "<p>Updates a <code>Location</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTerminalLocationsLocation.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTerminalReaders": {
            "main": "./lib/actions/GetTerminalReaders.js",
            "title": "<p>Returns a list of <code>Reader</code> objects.</p>",
            "description": "<p>Returns a list of <code>Reader</code> objects.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTerminalReaders.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostTerminalReaders": {
            "main": "./lib/actions/PostTerminalReaders.js",
            "title": "<p>Creates a new <code>Reader</code> object.</p>",
            "description": "<p>Creates a new <code>Reader</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTerminalReaders.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTerminalReadersReader": {
            "main": "./lib/actions/GetTerminalReadersReader.js",
            "title": "<p>Retrieves a <code>Reader</code> object.</p>",
            "description": "<p>Retrieves a <code>Reader</code> object.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTerminalReadersReader.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostTerminalReadersReader": {
            "main": "./lib/actions/PostTerminalReadersReader.js",
            "title": "<p>Updates a <code>Reader</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "description": "<p>Updates a <code>Reader</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTerminalReadersReader.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostTokens": {
            "main": "./lib/actions/PostTokens.js",
            "title": "<p>Creates a single-use token that represents a bank account's details.\nThis token can be used with any API method in place of a bank account dictionary. This token can be used only once, by attaching it to a <a href=\"#accounts\">Custom account</a>.</p>",
            "description": "<p>Creates a single-use token that represents a bank account's details.\nThis token can be used with any API method in place of a bank account dictionary. This token can be used only once, by attaching it to a <a href=\"#accounts\">Custom account</a>.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTokens.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTokensToken": {
            "main": "./lib/actions/GetTokensToken.js",
            "title": "<p>Retrieves the token with the given ID.</p>",
            "description": "<p>Retrieves the token with the given ID.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTokensToken.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTopups": {
            "main": "./lib/actions/GetTopups.js",
            "title": "<p>Returns a list of top-ups.</p>",
            "description": "<p>Returns a list of top-ups.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTopups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostTopups": {
            "main": "./lib/actions/PostTopups.js",
            "title": "<p>Top up the balance of an account</p>",
            "description": "<p>Top up the balance of an account</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTopups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTopupsTopup": {
            "main": "./lib/actions/GetTopupsTopup.js",
            "title": "<p>Retrieves the details of a top-up that has previously been created. Supply the unique top-up ID that was returned from your previous request, and Stripe will return the corresponding top-up information.</p>",
            "description": "<p>Retrieves the details of a top-up that has previously been created. Supply the unique top-up ID that was returned from your previous request, and Stripe will return the corresponding top-up information.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTopupsTopup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostTopupsTopup": {
            "main": "./lib/actions/PostTopupsTopup.js",
            "title": "<p>Updates the metadata of a top-up. Other top-up details are not editable by design.</p>",
            "description": "<p>Updates the metadata of a top-up. Other top-up details are not editable by design.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTopupsTopup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostTopupsTopupCancel": {
            "main": "./lib/actions/PostTopupsTopupCancel.js",
            "title": "<p>Cancels a top-up. Only pending top-ups can be canceled.</p>",
            "description": "<p>Cancels a top-up. Only pending top-ups can be canceled.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTopupsTopupCancel.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTransfers": {
            "main": "./lib/actions/GetTransfers.js",
            "title": "<p>Returns a list of existing transfers sent to connected accounts. The transfers are returned in sorted order, with the most recently created transfers appearing first.</p>",
            "description": "<p>Returns a list of existing transfers sent to connected accounts. The transfers are returned in sorted order, with the most recently created transfers appearing first.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTransfers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostTransfers": {
            "main": "./lib/actions/PostTransfers.js",
            "title": "<p>To send funds from your Stripe account to a connected account, you create a new transfer object. Your <a href=\"#balance\">Stripe balance</a> must be able to cover the transfer amount, or you'll receive an \"Insufficient Funds\" error.</p>",
            "description": "<p>To send funds from your Stripe account to a connected account, you create a new transfer object. Your <a href=\"#balance\">Stripe balance</a> must be able to cover the transfer amount, or you'll receive an \"Insufficient Funds\" error.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTransfers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTransfersIdReversals": {
            "main": "./lib/actions/GetTransfersIdReversals.js",
            "title": "<p>You can see a list of the reversals belonging to a specific transfer. Note that the 10 most recent reversals are always available by default on the transfer object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional reversals.</p>",
            "description": "<p>You can see a list of the reversals belonging to a specific transfer. Note that the 10 most recent reversals are always available by default on the transfer object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional reversals.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTransfersIdReversals.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostTransfersIdReversals": {
            "main": "./lib/actions/PostTransfersIdReversals.js",
            "title": "<p>When you create a new reversal, you must specify a transfer to create it on.</p>\n\n<p>When reversing transfers, you can optionally reverse part of the transfer. You can do so as many times as you wish until the entire transfer has been reversed.</p>\n\n<p>Once entirely reversed, a transfer can't be reversed again. This method will return an error when called on an already-reversed transfer, or when trying to reverse more money than is left on a transfer.</p>",
            "description": "<p>When you create a new reversal, you must specify a transfer to create it on.</p>\n\n<p>When reversing transfers, you can optionally reverse part of the transfer. You can do so as many times as you wish until the entire transfer has been reversed.</p>\n\n<p>Once entirely reversed, a transfer can't be reversed again. This method will return an error when called on an already-reversed transfer, or when trying to reverse more money than is left on a transfer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTransfersIdReversals.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTransfersTransfer": {
            "main": "./lib/actions/GetTransfersTransfer.js",
            "title": "<p>Retrieves the details of an existing transfer. Supply the unique transfer ID from either a transfer creation request or the transfer list, and Stripe will return the corresponding transfer information.</p>",
            "description": "<p>Retrieves the details of an existing transfer. Supply the unique transfer ID from either a transfer creation request or the transfer list, and Stripe will return the corresponding transfer information.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTransfersTransfer.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostTransfersTransfer": {
            "main": "./lib/actions/PostTransfersTransfer.js",
            "title": "<p>Updates the specified transfer by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request accepts only metadata as an argument.</p>",
            "description": "<p>Updates the specified transfer by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request accepts only metadata as an argument.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTransfersTransfer.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTransfersTransferReversalsId": {
            "main": "./lib/actions/GetTransfersTransferReversalsId.js",
            "title": "<p>By default, you can see the 10 most recent reversals stored directly on the transfer object, but you can also retrieve details about a specific reversal stored on the transfer.</p>",
            "description": "<p>By default, you can see the 10 most recent reversals stored directly on the transfer object, but you can also retrieve details about a specific reversal stored on the transfer.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTransfersTransferReversalsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostTransfersTransferReversalsId": {
            "main": "./lib/actions/PostTransfersTransferReversalsId.js",
            "title": "<p>Updates the specified reversal by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request only accepts metadata and description as arguments.</p>",
            "description": "<p>Updates the specified reversal by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request only accepts metadata and description as arguments.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTransfersTransferReversalsId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetWebhookEndpoints": {
            "main": "./lib/actions/GetWebhookEndpoints.js",
            "title": "<p>Returns a list of your webhook endpoints.</p>",
            "description": "<p>Returns a list of your webhook endpoints.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetWebhookEndpoints.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostWebhookEndpoints": {
            "main": "./lib/actions/PostWebhookEndpoints.js",
            "title": "<p>A webhook endpoint must have a <code>url</code> and a list of <code>enabled_events</code>. You may optionally specify the Boolean <code>connect</code> parameter. If set to true, then a Connect webhook endpoint that notifies the specified <code>url</code> about events from all connected accounts is created; otherwise an account webhook endpoint that notifies the specified <code>url</code> only about events from your account is created. You can also create webhook endpoints in the <a href=\"https://dashboard.stripe.com/account/webhooks\">webhooks settings</a> section of the Dashboard.</p>",
            "description": "<p>A webhook endpoint must have a <code>url</code> and a list of <code>enabled_events</code>. You may optionally specify the Boolean <code>connect</code> parameter. If set to true, then a Connect webhook endpoint that notifies the specified <code>url</code> about events from all connected accounts is created; otherwise an account webhook endpoint that notifies the specified <code>url</code> only about events from your account is created. You can also create webhook endpoints in the <a href=\"https://dashboard.stripe.com/account/webhooks\">webhooks settings</a> section of the Dashboard.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostWebhookEndpoints.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteWebhookEndpointsWebhookEndpoint": {
            "main": "./lib/actions/DeleteWebhookEndpointsWebhookEndpoint.js",
            "title": "<p>You can also delete webhook endpoints via the <a href=\"https://dashboard.stripe.com/account/webhooks\">webhook endpoint management</a> page of the Stripe dashboard.</p>",
            "description": "<p>You can also delete webhook endpoints via the <a href=\"https://dashboard.stripe.com/account/webhooks\">webhook endpoint management</a> page of the Stripe dashboard.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteWebhookEndpointsWebhookEndpoint.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetWebhookEndpointsWebhookEndpoint": {
            "main": "./lib/actions/GetWebhookEndpointsWebhookEndpoint.js",
            "title": "<p>Retrieves the webhook endpoint with the given ID.</p>",
            "description": "<p>Retrieves the webhook endpoint with the given ID.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetWebhookEndpointsWebhookEndpoint.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PostWebhookEndpointsWebhookEndpoint": {
            "main": "./lib/actions/PostWebhookEndpointsWebhookEndpoint.js",
            "title": "<p>Updates the webhook endpoint. You may edit the <code>url</code>, the list of <code>enabled_events</code>, and the status of your endpoint.</p>",
            "description": "<p>Updates the webhook endpoint. You may edit the <code>url</code>, the list of <code>enabled_events</code>, and the status of your endpoint.</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostWebhookEndpointsWebhookEndpoint.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}